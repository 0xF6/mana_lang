name: Build

on:
  push:
    paths-ignore:
      - 'ide-ext/**'
      - 'samples/**'
      - '**.js'
      - '**.md'
      - '**.yml'
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_osx_aot:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: git fetch --prune --unshallow --tags
    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-osx-64
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100-rc.1.21458.32
    - name: Install GitVersion
      run: dotnet tool install --global --version 5.6.7 GitVersion.Tool
    - name: Restore dependencies
      run: dotnet restore
    - name: AOT build
      run: dotnet publish -r osx-x64 -c Release
      working-directory: ./backend/mana.backend.ishtar.light
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: osx-x64-build
        path: ./backend/mana.backend.ishtar.light/bin/Release/net6.0/osx-x64/native
        if-no-files-found: error
  build_linux:
    runs-on: ubuntu-latest

    steps:
    - name: install pre-req
      run: sudo apt-get install clang zlib1g-dev libkrb5-dev libssl-dev
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: git fetch --prune --unshallow --tags
    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-linux64
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100-rc.1.21458.32
    - name: Install GitVersion
      run: dotnet tool install --global --version 5.6.7 GitVersion.Tool
    - name: Restore dependencies
      run: dotnet restore
    - name: AOT build
      run: dotnet publish -r linux-x64 -c Release
      working-directory: ./backend/mana.backend.ishtar.light
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: linux-x64-build
        path: ./backend/mana.backend.ishtar.light/bin/Release/net6.0/linux-x64/native
        if-no-files-found: error
  build_linux_arm64:
    runs-on: ubuntu-latest

    steps:
    - name: install pre-req
      run: sudo apt-get install clang zlib1g-dev libkrb5-dev libssl-dev
    - name: install pre-req 2
      run: sudo apt-get install cmake llvm-3.9 clang-3.9 lldb-3.9
       / liblldb-3.9-dev libunwind8 libunwind8-dev gettext 
       / libicu-dev liblttng-ust-dev libcurl4-openssl-dev 
       / libssl-dev libnuma-dev libkrb5-dev
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: git fetch --prune --unshallow --tags
    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-linux-arm64
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100-rc.1.21458.32
    - name: Install GitVersion
      run: dotnet tool install --global --version 5.6.7 GitVersion.Tool
    - name: Restore dependencies
      run: dotnet restore
    - name: AOT build
      run: dotnet publish -r linux-arm64 -c Release -p:CppCompilerAndLinker=clang-9 -p:SysRoot=/crossrootfs/arm64
      working-directory: ./backend/mana.backend.ishtar.light
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: linux-arm64-build
        path: ./backend/mana.backend.ishtar.light/bin/Release/net6.0/linux-arm64/native
        if-no-files-found: error
  build_win_arm64:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: git fetch --prune --unshallow --tags
    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-win-arm64
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100-rc.1.21458.32
    - name: Restore dependencies
      run: dotnet restore
    - name: AOT build
      run: dotnet publish -r win-arm64 -c Release
      working-directory: ./backend/mana.backend.ishtar.light
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: win-arm64-build
        path: ./backend/mana.backend.ishtar.light/bin/Release/net6.0/win-arm64/native
        if-no-files-found: error

  coverage:
    runs-on: windows-latest
    needs: [build_win_arm64, build_linux, build_osx_aot, build_linux_arm64]
    steps:
    - name: Export Env
      run: $env:CODACY_PROJECT_TOKEN="${{ secrets.CODACY_API_KEY }}"
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: git fetch --prune --unshallow --tags
    
    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-common
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100-rc.1.21458.32
    - name: Install DotCover
      run: dotnet tool install --global JetBrains.dotCover.GlobalTool --version 2021.2.0-eap03
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet dotcover test --no-build --dcReportType=DetailedXml
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@1.0.0
      with:
        project-token: ${{ secrets.CODACY_API_KEY }}
        coverage-reports: dotCover.Output.xml
