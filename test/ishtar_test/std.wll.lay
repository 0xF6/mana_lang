.module 'std'::'0.12.11.0'
{

	.table const
	{
		.s 000000:'App'
		.s 000001:'global::vein/lang'
		.s 000002:'std'
		.s 000003:'BitConvert'
		.s 000004:'NullPointerException'
		.s 000005:'TypeLoadFault'
		.s 000006:'IncorrectCastFault'
		.s 000007:'FreeImmortalObjectFault'
		.s 000008:'PlatformIsNotSupportFault'
		.s 000009:'GC'
		.s 000010:'Guid'
		.s 000011:'Mathf'
		.s 000012:'Out'
		.s 000013:'Range'
		.s 000014:'StringBuilder'
		.s 000015:'TimeSpan'
		.s 000016:'LineAspect'
		.s 000017:'global::vein/lang/aspects'
		.s 000018:'getUsages'
		.s 000019:'getUsages()'
		.s 000020:'IYieldable'
		.s 000021:'global::vein/lang/collections'
		.s 000022:'IYield'
		.s 000023:'Yieldable'
		.s 000024:'IEEEConsts'
		.s 000025:'Sys'
		.s 000026:'NetworkStream'
		.s 000027:'global::vein/lang/network'
		.s 000028:'TcpListener'
		.s 000029:'TcpSocket'
		.s 000030:'BigInt'
		.s 000031:'global::vein/lang/numeric'
		.s 000032:'Quaternion'
		.s 000033:'TypeNotFoundFault'
		.s 000034:'MemberNotFoundFault'
		.s 000035:'MultipleTypeFoundFault'
		.s 000036:'Field'
		.s 000037:'Function'
		.s 000038:'Type'
		.s 000039:'DeprecatedAspect'
		.s 000040:'global::vein/lang/workspace'
		.s 000041:'MaybeNullableAspect'
		.s 000042:'@_get_os_value'
		.s 000043:'@_get_os_value()'
		.s 000044:'@_exit'
		.s 000045:'@_exit(String,Int32)'
		.s 000046:'@_switch_flag'
		.s 000047:'@_switch_flag(String,Boolean)'
		.s 000048:'GetFrameworkName'
		.s 000049:'GetFrameworkName()'
		.s 000050:'Shutdown'
		.s 000051:'Shutdown(String,Int32)'
		.s 000052:'SwitchFlag'
		.s 000053:'SwitchFlag(String,Boolean)'
		.s 000054:'toString'
		.s 000055:'toString()'
		.s 000056:'ctor'
		.s 000057:'ctor()'
		.s 000058:'ctor(String)'
		.s 000059:'_get_allocated'
		.s 000060:'_get_allocated()'
		.s 000061:'_get_alive_objects'
		.s 000062:'_get_alive_objects()'
		.s 000063:'Abs'
		.s 000064:'Abs(Float)'
		.s 000065:'@_println'
		.s 000066:'@_println(String)'
		.s 000067:'print'
		.s 000068:'print(String)'
		.s 000069:'ctor(UInt32,UInt32)'
		.s 000070:'op_Add'
		.s 000071:'op_Add(String,String)'
		.s 000072:'op_Add(String,Int32)'
		.s 000073:'op_NotEqual'
		.s 000074:'op_NotEqual(String,String)'
		.s 000075:'op_Equal'
		.s 000076:'op_Equal(String,String)'
		.s 000077:'Concat'
		.s 000078:'Concat(String,String)'
		.s 000079:'Equal'
		.s 000080:'Equal(String,String)'
		.s 000081:'format'
		.s 000082:'format(String,Object)'
		.s 000083:'format(String,Object,Object)'
		.s 000084:'format(String,Object,Object,Object)'
		.s 000085:'format(String,Array)'
		.s 000086:'_fmt'
		.s 000087:'_fmt(String,Array)'
		.s 000088:'delete'
		.s 000089:'delete()'
		.s 000090:'append'
		.s 000091:'append(String)'
		.s 000092:'append(Int64)'
		.s 000093:'append(Int32)'
		.s 000094:'append(Int16)'
		.s 000095:'appendLine'
		.s 000096:'appendLine(String)'
		.s 000097:'appendLine(Int64)'
		.s 000098:'appendLine(Int32)'
		.s 000099:'appendLine(Int16)'
		.s 000100:'_append'
		.s 000101:'_append(StringBuilder,Object)'
		.s 000102:'_append(StringBuilder,ValueType)'
		.s 000103:'_appendLine'
		.s 000104:'_appendLine(StringBuilder,Object)'
		.s 000105:'_appendLine(StringBuilder,ValueType)'
		.s 000106:'_init_buffer'
		.s 000107:'_init_buffer(StringBuilder)'
		.s 000108:'_clear_buffer'
		.s 000109:'_clear_buffer(StringBuilder)'
		.s 000110:'_to_string'
		.s 000111:'_to_string(StringBuilder)'
		.s 000112:'ctor(Int64)'
		.s 000113:'get_Current'
		.s 000114:'get_Current()'
		.s 000115:'set_Current'
		.s 000116:'set_Current(Object)'
		.s 000117:'MoveNext'
		.s 000118:'MoveNext()'
		.s 000119:'Reset'
		.s 000120:'Reset()'
		.s 000121:'get_Yield'
		.s 000122:'get_Yield()'
		.s 000123:'set_Yield'
		.s 000124:'set_Yield(IYieldable)'
		.s 000125:'getHalfNaN'
		.s 000126:'getHalfNaN()'
		.s 000127:'getFloatNaN'
		.s 000128:'getFloatNaN()'
		.s 000129:'getDecimalNaN'
		.s 000130:'getDecimalNaN()'
		.s 000131:'getDoubleNaN'
		.s 000132:'getDoubleNaN()'
		.s 000133:'getHalfInfinity'
		.s 000134:'getHalfInfinity()'
		.s 000135:'getFloatInfinity'
		.s 000136:'getFloatInfinity()'
		.s 000137:'getDecimalInfinity'
		.s 000138:'getDecimalInfinity()'
		.s 000139:'getDoubleInfinity'
		.s 000140:'getDoubleInfinity()'
		.s 000141:'getHalfNegativeInfinity'
		.s 000142:'getHalfNegativeInfinity()'
		.s 000143:'getFloatNegativeInfinity'
		.s 000144:'getFloatNegativeInfinity()'
		.s 000145:'getDecimalNegativeInfinity'
		.s 000146:'getDecimalNegativeInfinity()'
		.s 000147:'getDoubleNegativeInfinity'
		.s 000148:'getDoubleNegativeInfinity()'
		.s 000149:'toString(ValueType)'
		.s 000150:'toString(Object)'
		.s 000151:'queryPerformanceCounter'
		.s 000152:'queryPerformanceCounter()'
		.s 000153:'create'
		.s 000154:'create(UInt16)'
		.s 000155:'IsActive'
		.s 000156:'IsActive()'
		.s 000157:'Start'
		.s 000158:'Start()'
		.s 000159:'ctor(UInt16)'
		.s 000160:'IsBlocked'
		.s 000161:'IsBlocked()'
		.s 000162:'IsListed'
		.s 000163:'IsListed()'
		.s 000164:'IsConnected'
		.s 000165:'IsConnected()'
		.s 000166:'Bind'
		.s 000167:'Bind()'
		.s 000168:'Send'
		.s 000169:'Send(Byte)'
		.s 000170:'Listen'
		.s 000171:'Listen(Int32)'
		.s 000172:'Create'
		.s 000173:'Create(UInt16)'
		.s 000174:'IsZero'
		.s 000175:'IsZero()'
		.s 000176:'ctor(Float,Float,Float,Float)'
		.s 000177:'getValue'
		.s 000178:'getValue(Object,Field)'
		.s 000179:'setValue'
		.s 000180:'setValue(Object,Field,Object)'
		.s 000181:'call'
		.s 000182:'call()'
		.s 000183:'call(Array)'
		.s 000184:'createFunctionFrom'
		.s 000185:'createFunctionFrom(Object,String)'
		.s 000186:'createFunctionFrom(Object,String,Boolean)'
		.s 000187:'createFunctionFrom(Object,String,Boolean,Boolean)'
		.s 000188:'_call'
		.s 000189:'_call(Function,Array)'
		.s 000190:'_createFn'
		.s 000191:'_createFn(Object,String,Boolean,Boolean)'
		.s 000192:'findByName'
		.s 000193:'findByName(String)'
		.s 000194:'tryFindByName'
		.s 000195:'tryFindByName(String)'
		.s 000196:'findField'
		.s 000197:'findField(String)'
		.s 000198:'findMethod'
		.s 000199:'findMethod(String)'
		.s 000200:'_findByName'
		.s 000201:'_findByName(String)'
		.s 000202:'_findField'
		.s 000203:'_findField(Type,String)'
		.s 000204:'_findMethod'
		.s 000205:'_findMethod(Type,String)'
		.s 000206:'Application.getPlatform()'
		.s 000207:'type_ctor'
		.s 000208:'type_ctor()'
		.s 000209:'Array'
		.s 000210:'Null pointer detected'
		.s 000211:'get_allocated'
		.s 000212:'get_allocated()'
		.s 000213:'get_alive_objects'
		.s 000214:'get_alive_objects()'
		.s 000215:'get_Epsilon'
		.s 000216:'get_Epsilon()'
		.s 000217:'get_PositiveInfinity'
		.s 000218:'get_PositiveInfinity()'
		.s 000219:'get_NegativeInfinity'
		.s 000220:'get_NegativeInfinity()'
		.s 000221:'get_NaN'
		.s 000222:'get_NaN()'
		.s 000223:'<object>'
		.s 000224:'get_capacity'
		.s 000225:'get_capacity()'
		.s 000226:''
		.s 000227:'get_Ticks'
		.s 000228:'get_Ticks()'
		.s 000229:'get_Days'
		.s 000230:'get_Days()'
		.s 000231:'get_Hours'
		.s 000232:'get_Hours()'
		.s 000233:'get_Milliseconds'
		.s 000234:'get_Milliseconds()'
		.s 000235:'get_Minutes'
		.s 000236:'get_Minutes()'
		.s 000237:'get_Seconds'
		.s 000238:'get_Seconds()'
		.s 000239:'get_TotalSeconds'
		.s 000240:'get_TotalSeconds()'
		.s 000241:'get_name'
		.s 000242:'get_name()'
		.s 000243:'get_owner'
		.s 000244:'get_owner()'
		.s 000245:'get_isPublic'
		.s 000246:'get_isPublic()'
		.s 000247:'get_isStatic'
		.s 000248:'get_isStatic()'
		.s 000249:'get_isPrivate'
		.s 000250:'get_isPrivate()'
		.s 000251:'get_isInterface'
		.s 000252:'get_isInterface()'
		.s 000253:'get_namespace'
		.s 000254:'get_namespace()'
		.s 000255:'get_flags'
		.s 000256:'get_flags()'
		.s 000257:'msg'
		.s 000258:'exitCode'
		.s 000259:'key'
		.s 000260:'value'
		.s 000261:'<this>'
		.s 000262:'x'
		.s 000263:'start'
		.s 000264:'end'
		.s 000265:'v1'
		.s 000266:'v2'
		.s 000267:'template'
		.s 000268:'o1'
		.s 000269:'o2'
		.s 000270:'o3'
		.s 000271:'arr'
		.s 000272:'t'
		.s 000273:'builder'
		.s 000274:'s'
		.s 000275:'buffer'
		.s 000276:'ticks'
		.s 000277:'port'
		.s 000278:'cq'
		.s 000279:'y'
		.s 000280:'z'
		.s 000281:'w'
		.s 000282:'m'
		.s 000283:'targetObject'
		.s 000284:'f'
		.s 000285:'args'
		.s 000286:'target'
		.s 000287:'name'
		.s 000288:'ignoreCase'
		.s 000289:'throwWhenFailBind'
		.s 000290:'0.12.11.0'
		.t 000000:'std%global::vein/lang/App'
		.t 000001:'std%global::vein/lang/Object'
		.t 000002:'std%global::vein/lang/Array'
		.t 000003:'std%global::vein/lang/ValueType'
		.t 000004:'std%global::vein/lang/Exception'
		.t 000005:'std%global::vein/lang/GC'
		.t 000006:'std%global::vein/lang/Guid'
		.t 000007:'std%global::vein/lang/IEEEConsts'
		.t 000008:'std%global::vein/lang/Out'
		.t 000009:'std%global::vein/lang/Range'
		.t 000010:'std%global::vein/lang/Sys'
		.t 000011:'std%global::vein/lang/String'
		.t 000012:'std%global::vein/lang/StringBuilder'
		.t 000013:'std%global::vein/lang/TimeSpan'
		.t 000014:'std%global::vein/lang/Aspect'
		.t 000015:'std%global::vein/lang/collections/Yieldable'
		.t 000016:'std%global::vein/lang/network/TcpListener'
		.t 000017:'std%global::vein/lang/network/TcpSocket'
		.t 000018:'std%global::vein/lang/numeric/Quaternion'
		.t 000019:'std%global::vein/lang/Field'
		.t 000020:'std%global::vein/lang/Function'
		.t 000021:'std%global::vein/lang/Type'
		.t 000022:'std%global::vein/lang/Int32'
		.t 000023:'std%global::vein/lang/Void'
		.t 000024:'std%global::vein/lang/Boolean'
		.t 000025:'std%global::vein/lang/Int64'
		.t 000026:'std%global::vein/lang/BitConvert'
		.t 000027:'std%global::vein/lang/Byte'
		.t 000028:'std%global::vein/lang/Char'
		.t 000029:'std%global::vein/lang/Decimal'
		.t 000030:'std%global::vein/lang/Double'
		.t 000031:'std%global::vein/lang/NullPointerException'
		.t 000032:'std%global::vein/lang/TypeLoadFault'
		.t 000033:'std%global::vein/lang/IncorrectCastFault'
		.t 000034:'std%global::vein/lang/FreeImmortalObjectFault'
		.t 000035:'std%global::vein/lang/PlatformIsNotSupportFault'
		.t 000036:'std%global::vein/lang/Float'
		.t 000037:'std%global::vein/lang/UInt64'
		.t 000038:'std%global::vein/lang/Int16'
		.t 000039:'std%global::vein/lang/Half'
		.t 000040:'std%global::vein/lang/Mathf'
		.t 000041:'std%global::vein/lang/UInt32'
		.t 000042:'std%global::vein/lang/Raw'
		.t 000043:'std%global::vein/lang/UInt16'
		.t 000044:'std%global::vein/lang/aspects/LineAspect'
		.t 000045:'std%global::vein/lang/collections/IYieldable'
		.t 000046:'std%global::vein/lang/collections/IYield'
		.t 000047:'std%global::vein/lang/network/NetworkStream'
		.t 000048:'std%global::vein/lang/numeric/BigInt'
		.t 000049:'std%global::vein/lang/TypeNotFoundFault'
		.t 000050:'std%global::vein/lang/MemberNotFoundFault'
		.t 000051:'std%global::vein/lang/MultipleTypeFoundFault'
		.t 000052:'std%global::vein/lang/workspace/DeprecatedAspect'
		.t 000053:'std%global::vein/lang/workspace/MaybeNullableAspect'
		.f 000000:'Array.!!value'
		.f 000001:'Array.!!block'
		.f 000002:'Array.!!size'
		.f 000003:'Array.!!rank'
		.f 000004:'Array.empty'
		.f 000005:'Boolean.!!value'
		.f 000006:'Boolean.True'
		.f 000007:'Boolean.False'
		.f 000008:'Boolean.TrueString'
		.f 000009:'Boolean.FalseString'
		.f 000010:'Byte.!!value'
		.f 000011:'Char.!!value'
		.f 000012:'Decimal.!!value'
		.f 000013:'Double.!!value'
		.f 000014:'Exception.message'
		.f 000015:'Float.!!value'
		.f 000016:'Guid.Empty'
		.f 000017:'Guid._a'
		.f 000018:'Guid._b'
		.f 000019:'Guid._c'
		.f 000020:'Guid._d'
		.f 000021:'Guid._e'
		.f 000022:'Guid._f'
		.f 000023:'Guid._g'
		.f 000024:'Guid._h'
		.f 000025:'Guid._i'
		.f 000026:'Guid._j'
		.f 000027:'Guid._k'
		.f 000028:'Half.!!value'
		.f 000029:'Int16.!!value'
		.f 000030:'Int16.MaxValue'
		.f 000031:'Int16.MinValue'
		.f 000032:'Int32.!!value'
		.f 000033:'Int32.MaxValue'
		.f 000034:'Int32.MinValue'
		.f 000035:'Int64.!!value'
		.f 000036:'Int64.MaxValue'
		.f 000037:'Int64.MinValue'
		.f 000038:'Mathf.E'
		.f 000039:'Mathf.PI'
		.f 000040:'Mathf.Tau'
		.f 000041:'Mathf.defaultRoundDigits'
		.f 000042:'Range.Start'
		.f 000043:'Range.End'
		.f 000044:'String.!!value'
		.f 000045:'String.Length'
		.f 000046:'StringBuilder.!!buffer'
		.f 000047:'StringBuilder._capacity'
		.f 000048:'TimeSpan.TicksPerDay'
		.f 000049:'TimeSpan.TicksPerHour'
		.f 000050:'TimeSpan.TicksPerMinute'
		.f 000051:'TimeSpan.TicksPerSecond'
		.f 000052:'TimeSpan.TicksPerMillisecond'
		.f 000053:'TimeSpan.SecondsPerTick'
		.f 000054:'TimeSpan._ticks'
		.f 000055:'UInt16.!!value'
		.f 000056:'UInt16.MaxValue'
		.f 000057:'UInt16.MinValue'
		.f 000058:'UInt32.!!value'
		.f 000059:'UInt32.MaxValue'
		.f 000060:'UInt32.MinValue'
		.f 000061:'UInt64.!!value'
		.f 000062:'UInt64.MaxValue'
		.f 000063:'UInt64.MinValue'
		.f 000064:'ValueType.!!value'
		.f 000065:'Aspect.USAGE_METHOD'
		.f 000066:'Aspect.USAGE_CLASS'
		.f 000067:'Aspect.USAGE_FIELD'
		.f 000068:'Aspect.USAGE_PROPERTY'
		.f 000069:'Yieldable._current'
		.f 000070:'TcpListener._port'
		.f 000071:'TcpListener._dualMode'
		.f 000072:'TcpListener._active'
		.f 000073:'TcpListener._socket'
		.f 000074:'TcpListener.ExclusiveAddressUse'
		.f 000075:'TcpSocket._port'
		.f 000076:'TcpSocket._is_listing'
		.f 000077:'TcpSocket._handle'
		.f 000078:'TcpSocket._blocked'
		.f 000079:'TcpSocket._connected'
		.f 000080:'Quaternion.X'
		.f 000081:'Quaternion.Y'
		.f 000082:'Quaternion.Z'
		.f 000083:'Quaternion.W'
		.f 000084:'Field._target'
		.f 000085:'Field._name'
		.f 000086:'Field._vtoffset'
		.f 000087:'Function._target'
		.f 000088:'Function._vtoffset'
		.f 000089:'Function._name'
		.f 000090:'Function._quality_name'
		.f 000091:'Type._unique_id'
		.f 000092:'Type._module_id'
		.f 000093:'Type._flags'
		.f 000094:'Type._name'
		.f 000095:'Type._namespace'
	}

	@'aspect/alias/class/Boolean._0' = 'bool'
	@'aspect/alias/class/Byte._0' = 'u8'
	@'aspect/alias/class/Char._0' = 'char'
	@'aspect/alias/class/Double._0' = 'f64'
	@'aspect/alias/class/Float._0' = 'f32'
	@'aspect/alias/class/Half._0' = 'f16'
	@'aspect/alias/class/Int16._0' = 'i16'
	@'aspect/alias/class/Int32._0' = 'i32'
	@'aspect/alias/class/Int64._0' = 'i64'
	@'aspect/alias/class/Object._0' = 'object'
	@'aspect/alias/class/Raw._0' = 'raw'
	@'aspect/alias/class/String._0' = 'string'
	@'aspect/alias/class/UInt16._0' = 'u16'
	@'aspect/alias/class/UInt32._0' = 'u32'
	@'aspect/alias/class/UInt64._0' = 'u64'
	@'aspect/alias/class/Void._0' = 'void'
	@'aspect/native/class/App/method/@_get_os_value()._0' = '@_get_os_value'
	@'aspect/native/class/Array/field/_value._0' = '!!value'
	@'aspect/native/class/Array/field/_block._0' = '!!block'
	@'aspect/native/class/Array/field/Length._0' = '!!size'
	@'aspect/native/class/Array/field/Rank._0' = '!!rank'
	@'aspect/native/class/Boolean/field/_value._0' = '!!value'
	@'aspect/native/class/Byte/field/_value._0' = '!!value'
	@'aspect/native/class/Char/field/_value._0' = '!!value'
	@'aspect/native/class/Decimal/field/_value._0' = '!!value'
	@'aspect/native/class/Double/field/_value._0' = '!!value'
	@'aspect/native/class/Float/field/_value._0' = '!!value'
	@'aspect/native/class/GC/method/_get_allocated()._0' = 'i_call_GC_get_allocated'
	@'aspect/native/class/GC/method/_get_alive_objects()._0' = 'i_call_GC_get_alive_objects'
	@'aspect/native/class/Half/field/_value._0' = '!!value'
	@'aspect/native/class/Int16/field/_value._0' = '!!value'
	@'aspect/native/class/Int32/field/_value._0' = '!!value'
	@'aspect/native/class/Int64/field/_value._0' = '!!value'
	@'aspect/native/class/Out/method/@_println(String)._0' = '@_println'
	@'aspect/native/class/String/field/__value._0' = '!!value'
	@'aspect/native/class/String/method/Concat(String,String)._0' = 'i_call_String_Concat'
	@'aspect/native/class/String/method/Equal(String,String)._0' = 'i_call_String_Equal'
	@'aspect/native/class/String/method/_fmt(String,Array)._0' = 'i_call_String_fmt'
	@'aspect/native/class/StringBuilder/field/__buffer._0' = '!!buffer'
	@'aspect/native/class/StringBuilder/method/_append(StringBuilder,Object)._0' = 'i_call_StringBuilder_append'
	@'aspect/native/class/StringBuilder/method/_append(StringBuilder,ValueType)._0' = 'i_call_StringBuilder_append'
	@'aspect/native/class/StringBuilder/method/_appendLine(StringBuilder,Object)._0' = 'i_call_StringBuilder_appendLine'
	@'aspect/native/class/StringBuilder/method/_appendLine(StringBuilder,ValueType)._0' = 'i_call_StringBuilder_appendLine'
	@'aspect/native/class/StringBuilder/method/_init_buffer(StringBuilder)._0' = 'i_call_StringBuilder_init_buffer'
	@'aspect/native/class/StringBuilder/method/_clear_buffer(StringBuilder)._0' = 'i_call_StringBuilder_clear_buffer'
	@'aspect/native/class/StringBuilder/method/_to_string(StringBuilder)._0' = 'i_call_StringBuilder_toString'
	@'aspect/native/class/UInt16/field/_value._0' = '!!value'
	@'aspect/native/class/UInt32/field/_value._0' = '!!value'
	@'aspect/native/class/UInt64/field/_value._0' = '!!value'
	@'aspect/native/class/ValueType/field/__value._0' = '!!value'
	@'aspect/native/class/IEEEConsts/method/getHalfNaN()._0' = 'i_call_get_Half_NaN'
	@'aspect/native/class/IEEEConsts/method/getFloatNaN()._0' = 'i_call_get_Float_NaN'
	@'aspect/native/class/IEEEConsts/method/getDecimalNaN()._0' = 'i_call_get_Decimal_NaN'
	@'aspect/native/class/IEEEConsts/method/getDoubleNaN()._0' = 'i_call_get_Double_NaN'
	@'aspect/native/class/IEEEConsts/method/getHalfInfinity()._0' = 'i_call_get_Half_Infinity'
	@'aspect/native/class/IEEEConsts/method/getFloatInfinity()._0' = 'i_call_get_Float_Infinity'
	@'aspect/native/class/IEEEConsts/method/getDecimalInfinity()._0' = 'i_call_get_Decimal_Infinity'
	@'aspect/native/class/IEEEConsts/method/getDoubleInfinity()._0' = 'i_call_get_Double_Infinity'
	@'aspect/native/class/IEEEConsts/method/getHalfNegativeInfinity()._0' = 'i_call_get_Half_NegativeInfinity'
	@'aspect/native/class/IEEEConsts/method/getFloatNegativeInfinity()._0' = 'i_call_get_Float_NegativeInfinity'
	@'aspect/native/class/IEEEConsts/method/getDecimalNegativeInfinity()._0' = 'i_call_get_Decimal_NegativeInfinity'
	@'aspect/native/class/IEEEConsts/method/getDoubleNegativeInfinity()._0' = 'i_call_get_Double_NegativeInfinity'
	@'aspect/native/class/Sys/method/toString(ValueType)._0' = '@value2string'
	@'aspect/native/class/Sys/method/toString(Object)._0' = '@object2string'
	@'aspect/native/class/Sys/method/queryPerformanceCounter()._0' = '@queryPerformanceCounter'
	@'aspect/native/class/Field/method/getValue(Object,Field)._0' = 'i_call_Field_getValue'
	@'aspect/native/class/Field/method/setValue(Object,Field,Object)._0' = 'i_call_Field_setValue'
	@'aspect/native/class/Function/method/_call(Function,Array)._0' = 'i_call_Function_call'
	@'aspect/native/class/Function/method/_createFn(Object,String,Boolean,Boolean)._0' = 'i_call_Function_create'
	@'aspect/native/class/Type/method/_findByName(String)._0' = 'i_call_Type_findByName'
	@'aspect/native/class/Type/method/_findField(Type,String)._0' = 'i_call_Type_findField'
	@'aspect/native/class/Type/method/_findMethod(Type,String)._0' = 'i_call_Type_findMethod'
	@'Boolean.True' = 'True'
	@'Boolean.False' = 'False'
	@'Boolean.TrueString' = 'true'
	@'Boolean.FalseString' = 'false'
	@'Int16.MaxValue' = '32767'
	@'Int16.MinValue' = '-32768'
	@'Int32.MaxValue' = '2147483647'
	@'Int32.MinValue' = '-2147483648'
	@'Int64.MaxValue' = '9223372036854775807'
	@'Int64.MinValue' = '-9223372036854775808'
	@'Mathf.E' = '2.7182817'
	@'Mathf.PI' = '3.1415927'
	@'Mathf.Tau' = '6.2831855'
	@'Mathf.defaultRoundDigits' = '6'
	@'UInt16.MaxValue' = '65535'
	@'UInt16.MinValue' = '0'
	@'UInt32.MaxValue' = '4294967295'
	@'UInt32.MinValue' = '0'
	@'UInt64.MaxValue' = '18446744073709551615'
	@'UInt64.MinValue' = '0'
	
	.namespace 'global::vein/lang'
	.class 'App' public static extends 'Object'
	{
		.method extern @_get_os_value () static private -> Int32;
		
		.method extern @_exit (msg: String, exitCode: Int32) static private -> Void;
		
		.method extern @_switch_flag (key: String, value: Boolean) static private -> Void;
		
		.method 'GetFrameworkName' () public static -> String
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.str .0x000000CE
			/* ::0008 */ .ret
			
		}
		
		.method 'Shutdown' (msg: String, exitCode: Int32) public static -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
		.method 'SwitchFlag' (key: String, value: Boolean) public static -> Void
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call App::@_switch_flag(key: String,value: Boolean)
			/* ::0016 */ .ret
			
		}
		
		.method special 'ctor' (<this>: App) public special -> App
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Array' public special extends 'Object'
	{
		.field '!!value' as 'ValueType' special
		.field '!!block' as 'Int64' special
		.field '!!size' as 'Int64' public special readonly
		.field '!!rank' as 'Int64' public special readonly
		.field 'empty' as 'Array' public static
		.method 'toString' (<this>: Array) public override -> String
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.str .0x000000D1
			/* ::0008 */ .ret
			
		}
		
		.method special 'ctor' (<this>: Array) public special -> Array
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 22
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ld.type [std%global::vein/lang/Object] 
			/* ::0008 */ .ldc.i4.0
			/* ::0010 */ .newarr
			/* ::0020 */ .stsf empty std%global::vein/lang/Array, Public, Special
			/* ::0022 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'BitConvert' public extends 'Object'
	{
		.method special 'ctor' (<this>: BitConvert) public special -> BitConvert
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Boolean' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.field 'True' as 'Boolean' literal public
		.field 'False' as 'Boolean' literal public
		.field 'TrueString' as 'String' literal public
		.field 'FalseString' as 'String' literal public
		.method special 'ctor' (<this>: Boolean) public special -> Boolean
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Byte' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.method special 'ctor' (<this>: Byte) public special -> Byte
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Char' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.method special 'ctor' (<this>: Char) public special -> Char
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Decimal' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.method special 'ctor' (<this>: Decimal) public special -> Decimal
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Double' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.method special 'ctor' (<this>: Double) public special -> Double
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Exception' public special extends 'Object'
	{
		.field 'message' as 'String' public
		.method 'toString' (<this>: Exception) public override -> String
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf message std%global::vein/lang/String, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method special 'ctor' (<this>: Exception) public special -> Exception
		{
			.size 30
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldnull
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .stf message std%global::vein/lang/String, Public, Special
			/* ::0028 */ .ldarg.0
			/* ::0030 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'NullPointerException' public extends 'Exception'
	{
		.method 'ctor' (<this>: NullPointerException) public -> NullPointerException
		{
			.size 34
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.str .0x000000D2
			/* ::0008 */ .ldarg.0
			/* ::0018 */ .stf message std%global::vein/lang/String, Public, Special
			/* ::0020 */ .ldarg.0
			/* ::0030 */ .call Exception::ctor(<this>: Exception)
			/* ::0032 */ .ldarg.0
			/* ::0034 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'TypeLoadFault' public extends 'Exception'
	{
		.method 'ctor' (<this>: TypeLoadFault, msg: String) public -> TypeLoadFault
		{
			.size 30
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf message std%global::vein/lang/String, Public, Special
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .call Exception::ctor(<this>: Exception)
			/* ::0028 */ .ldarg.0
			/* ::0030 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'IncorrectCastFault' public extends 'Exception'
	{
		.method 'ctor' (<this>: IncorrectCastFault) public -> IncorrectCastFault
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Exception::ctor(<this>: Exception)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method 'ctor' (<this>: IncorrectCastFault, msg: String) public -> IncorrectCastFault
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf message std%global::vein/lang/String, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'FreeImmortalObjectFault' public extends 'Exception'
	{
		.method 'ctor' (<this>: FreeImmortalObjectFault) public -> FreeImmortalObjectFault
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Exception::ctor(<this>: Exception)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method 'ctor' (<this>: FreeImmortalObjectFault, msg: String) public -> FreeImmortalObjectFault
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf message std%global::vein/lang/String, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'PlatformIsNotSupportFault' public extends 'Exception'
	{
		.method 'ctor' (<this>: PlatformIsNotSupportFault) public -> PlatformIsNotSupportFault
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Exception::ctor(<this>: Exception)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method 'ctor' (<this>: PlatformIsNotSupportFault, msg: String) public -> PlatformIsNotSupportFault
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf message std%global::vein/lang/String, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Float' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.method special 'ctor' (<this>: Float) public special -> Float
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'GC' public static extends 'Object'
	{
		.method extern _get_allocated () static private -> UInt64;
		
		.method extern _get_alive_objects () static private -> UInt64;
		
		.method 'get_allocated' () public static -> UInt64
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .call GC::_get_allocated()
			/* ::0012 */ .ret
			
		}
		
		.method 'get_alive_objects' () public static -> UInt64
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .call GC::_get_alive_objects()
			/* ::0012 */ .ret
			
		}
		
		.method special 'ctor' (<this>: GC) public special -> GC
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Guid' public extends 'ValueType', 'Object'
	{
		.field 'Empty' as 'Guid' public static readonly
		.field '_a' as 'Int32' 
		.field '_b' as 'Int16' 
		.field '_c' as 'Int16' 
		.field '_d' as 'Byte' 
		.field '_e' as 'Byte' 
		.field '_f' as 'Byte' 
		.field '_g' as 'Byte' 
		.field '_h' as 'Byte' 
		.field '_i' as 'Byte' 
		.field '_j' as 'Byte' 
		.field '_k' as 'Byte' 
		.method special 'ctor' (<this>: Guid) public special -> Guid
		{
			.size 182
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .call Object::ctor(<this>: Object)
			/* ::0026 */ .ldnull
			/* ::0028 */ .ldarg.0
			/* ::0038 */ .stf _a std%global::vein/lang/Int32, Public, Special
			/* ::0040 */ .ldnull
			/* ::0042 */ .ldarg.0
			/* ::0052 */ .stf _b std%global::vein/lang/Int16, Public, Special
			/* ::0054 */ .ldnull
			/* ::0056 */ .ldarg.0
			/* ::0066 */ .stf _c std%global::vein/lang/Int16, Public, Special
			/* ::0068 */ .ldnull
			/* ::0070 */ .ldarg.0
			/* ::0080 */ .stf _d std%global::vein/lang/Byte, Public, Special
			/* ::0082 */ .ldnull
			/* ::0084 */ .ldarg.0
			/* ::0094 */ .stf _e std%global::vein/lang/Byte, Public, Special
			/* ::0096 */ .ldnull
			/* ::0098 */ .ldarg.0
			/* ::0108 */ .stf _f std%global::vein/lang/Byte, Public, Special
			/* ::0110 */ .ldnull
			/* ::0112 */ .ldarg.0
			/* ::0122 */ .stf _g std%global::vein/lang/Byte, Public, Special
			/* ::0124 */ .ldnull
			/* ::0126 */ .ldarg.0
			/* ::0136 */ .stf _h std%global::vein/lang/Byte, Public, Special
			/* ::0138 */ .ldnull
			/* ::0140 */ .ldarg.0
			/* ::0150 */ .stf _i std%global::vein/lang/Byte, Public, Special
			/* ::0152 */ .ldnull
			/* ::0154 */ .ldarg.0
			/* ::0164 */ .stf _j std%global::vein/lang/Byte, Public, Special
			/* ::0166 */ .ldnull
			/* ::0168 */ .ldarg.0
			/* ::0178 */ .stf _k std%global::vein/lang/Byte, Public, Special
			/* ::0180 */ .ldarg.0
			/* ::0182 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 28
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .newobj [std%global::vein/lang/Guid] 
			/* ::0016 */ .call Guid::ctor(<this>: Guid)
			/* ::0026 */ .stsf Empty std%global::vein/lang/Guid, Public
			/* ::0028 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Half' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.method special 'get_Epsilon' (<this>: Half) public special -> Half
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.f2 5.9604645E-08.float
			/* ::0008 */ .ret
			
		}
		
		.method special 'get_PositiveInfinity' (<this>: Half) public special -> Half
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .call IEEEConsts::getHalfInfinity()
			/* ::0012 */ .ret
			
		}
		
		.method special 'get_NegativeInfinity' (<this>: Half) public special -> Half
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .call IEEEConsts::getHalfNegativeInfinity()
			/* ::0012 */ .ret
			
		}
		
		.method special 'get_NaN' (<this>: Half) public special -> Half
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .call IEEEConsts::getHalfNaN()
			/* ::0012 */ .ret
			
		}
		
		.method special 'ctor' (<this>: Half) public special -> Half
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Int16' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.field 'MaxValue' as 'Int16' literal public
		.field 'MinValue' as 'Int16' literal public
		.method special 'ctor' (<this>: Int16) public special -> Int16
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Int32' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.field 'MaxValue' as 'Int32' literal public
		.field 'MinValue' as 'Int32' literal public
		.method special 'ctor' (<this>: Int32) public special -> Int32
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Int64' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.field 'MaxValue' as 'Int64' literal public
		.field 'MinValue' as 'Int64' literal public
		.method special 'ctor' (<this>: Int64) public special -> Int64
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Mathf' public static extends 'Object'
	{
		.field 'E' as 'Float' literal public
		.field 'PI' as 'Float' literal public
		.field 'Tau' as 'Float' literal public
		.field 'defaultRoundDigits' as 'Int32' literal
		.method 'Abs' (x: Float) public static -> Float
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.f4 12.float
			/* ::0008 */ .ret
			
		}
		
		.method special 'ctor' (<this>: Mathf) public special -> Mathf
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Object' public special extends 
	{
		.method 'toString' (<this>: Object) public virtual -> String
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.str .0x000000DF
			/* ::0008 */ .ret
			
		}
		
		.method special 'ctor' (<this>: Object) public special -> Object
		{
			.size 4
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Out' public static extends 'Object'
	{
		.method extern @_println (value: String) public static -> Void;
		
		.method 'print' (value: String) public static -> Void
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Out::@_println(value: String)
			/* ::0014 */ .ret
			
		}
		
		.method special 'ctor' (<this>: Out) public special -> Out
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Range' public special extends 'Object', 'ValueType'
	{
		.field 'Start' as 'UInt32' public
		.field 'End' as 'UInt32' public
		.method 'ctor' (<this>: Range, start: UInt32, end: UInt32)  -> Range
		{
			.size 56
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf Start std%global::vein/lang/UInt32, Public, Special
			/* ::0016 */ .ldarg.2
			/* ::0018 */ .ldarg.0
			/* ::0028 */ .stf End std%global::vein/lang/UInt32, Public, Special
			/* ::0030 */ .ldarg.0
			/* ::0040 */ .call Object::ctor(<this>: Object)
			/* ::0042 */ .ldarg.0
			/* ::0052 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0054 */ .ldarg.0
			/* ::0056 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Raw' internal special extends 'Object'
	{
		.method special 'ctor' (<this>: Raw) public special -> Raw
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'String' public special extends 'Object'
	{
		.field '!!value' as 'Raw' special
		.field 'Length' as 'Int32' public special
		.method 'toString' (<this>: String) public override -> String
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Sys::toString(value: Object)
			/* ::0014 */ .ret
			
		}
		
		.method special 'op_Add' (v1: String, v2: String) public static special -> String
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call String::Concat(v1: String,v2: String)
			/* ::0016 */ .ret
			
		}
		
		.method special 'op_Add' (v1: String, v2: Int32) public static special -> String
		{
			.size 38
			.maxstack 0x00000040
			.locals 0x00000001
			
			.locals { 
				[0]: String, {'t'}
			};
			/* ::0002 */ .ldarg.1
			/* ::0012 */ .call ValueType::toString(<this>: ValueType)
			/* ::0018 */ .stloc.s 0x00000000.int
			/* ::0020 */ .ldarg.0
			/* ::0020 */ /* access local, var: 't', index: '0', type: 'global::vein/lang/String' */
			/* ::0026 */ .ldloc.s 0x00000000.int
			/* ::0036 */ .call String::Concat(v1: String,v2: String)
			/* ::0038 */ .ret
			
		}
		
		.method special 'op_NotEqual' (v1: String, v2: String) public static special -> Boolean
		{
			.size 20
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call String::op_Equal(v1: String,v2: String)
			/* ::0016 */ .ldc.i4.0
			/* ::0018 */ .eql.t
			/* ::0020 */ .ret
			
		}
		
		.method special 'op_Equal' (v1: String, v2: String) public static special -> Boolean
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call String::Equal(v1: String,v2: String)
			/* ::0016 */ .ret
			
		}
		
		.method extern Concat (v1: String, v2: String) static private -> String;
		
		.method extern Equal (v1: String, v2: String) static private -> String;
		
		.method 'format' (template: String, o1: Object) public static -> String
		{
			.size 44
			.maxstack 0x00000040
			.locals 0x00000001
			
			.locals { 
				[0]: Array, {'a'}
			};
			/* ::0006 */ .ld.type [std%global::vein/lang/String] 
			/* ::0008 */ .ldc.i4.1
			/* ::0010 */ .newarr
			/* ::0012 */ .ldarg.1
			/* ::0018 */ .stelem.s 0x00000000.int
			/* ::0024 */ .stloc.s 0x00000000.int
			/* ::0026 */ .ldarg.0
			/* ::0026 */ /* access local, var: 'a', index: '0', type: 'global::vein/lang/Array' */
			/* ::0032 */ .ldloc.s 0x00000000.int
			/* ::0042 */ .call String::_fmt(t: String,arr: Array)
			/* ::0044 */ .ret
			
		}
		
		.method 'format' (template: String, o1: Object, o2: Object) public static -> String
		{
			.size 52
			.maxstack 0x00000040
			.locals 0x00000001
			
			.locals { 
				[0]: Array, {'a'}
			};
			/* ::0006 */ .ld.type [std%global::vein/lang/String] 
			/* ::0008 */ .ldc.i4.2
			/* ::0010 */ .newarr
			/* ::0012 */ .ldarg.1
			/* ::0018 */ .stelem.s 0x00000000.int
			/* ::0020 */ .ldarg.2
			/* ::0026 */ .stelem.s 0x00000001.int
			/* ::0032 */ .stloc.s 0x00000000.int
			/* ::0034 */ .ldarg.0
			/* ::0034 */ /* access local, var: 'a', index: '0', type: 'global::vein/lang/Array' */
			/* ::0040 */ .ldloc.s 0x00000000.int
			/* ::0050 */ .call String::_fmt(t: String,arr: Array)
			/* ::0052 */ .ret
			
		}
		
		.method 'format' (template: String, o1: Object, o2: Object, o3: Object) public static -> String
		{
			.size 60
			.maxstack 0x00000040
			.locals 0x00000001
			
			.locals { 
				[0]: Array, {'a'}
			};
			/* ::0006 */ .ld.type [std%global::vein/lang/String] 
			/* ::0008 */ .ldc.i4.3
			/* ::0010 */ .newarr
			/* ::0012 */ .ldarg.1
			/* ::0018 */ .stelem.s 0x00000000.int
			/* ::0020 */ .ldarg.2
			/* ::0026 */ .stelem.s 0x00000001.int
			/* ::0028 */ .ldarg.3
			/* ::0034 */ .stelem.s 0x00000002.int
			/* ::0040 */ .stloc.s 0x00000000.int
			/* ::0042 */ .ldarg.0
			/* ::0042 */ /* access local, var: 'a', index: '0', type: 'global::vein/lang/Array' */
			/* ::0048 */ .ldloc.s 0x00000000.int
			/* ::0058 */ .call String::_fmt(t: String,arr: Array)
			/* ::0060 */ .ret
			
		}
		
		.method 'format' (template: String, arr: Array) public static -> String
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call String::_fmt(t: String,arr: Array)
			/* ::0016 */ .ret
			
		}
		
		.method extern _fmt (t: String, arr: Array) static private -> String;
		
		.method special 'ctor' (<this>: String) public special -> String
		{
			.size 30
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldnull
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .stf Length std%global::vein/lang/Int32, Public, Special
			/* ::0028 */ .ldarg.0
			/* ::0030 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'StringBuilder' public extends 'Object'
	{
		.field '!!buffer' as 'Raw' special
		.field '_capacity' as 'UInt32' 
		.method 'ctor' (<this>: StringBuilder) public -> StringBuilder
		{
			.size 42
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call StringBuilder::_init_buffer(builder: StringBuilder)
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .call Object::ctor(<this>: Object)
			/* ::0026 */ .ldnull
			/* ::0028 */ .ldarg.0
			/* ::0038 */ .stf _capacity std%global::vein/lang/UInt32, Public, Special
			/* ::0040 */ .ldarg.0
			/* ::0042 */ .ret
			
		}
		
		.method 'delete' (<this>: StringBuilder) public -> Void
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call StringBuilder::_clear_buffer(builder: StringBuilder)
			/* ::0014 */ .ret
			
		}
		
		.method 'append' (<this>: StringBuilder, value: String) public -> StringBuilder
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call StringBuilder::_append(builder: StringBuilder,s: Object)
			/* ::0016 */ .ret
			
		}
		
		.method 'append' (<this>: StringBuilder, value: Int64) public -> StringBuilder
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call StringBuilder::_append(builder: StringBuilder,s: ValueType)
			/* ::0016 */ .ret
			
		}
		
		.method 'append' (<this>: StringBuilder, value: Int32) public -> StringBuilder
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call StringBuilder::_append(builder: StringBuilder,s: ValueType)
			/* ::0016 */ .ret
			
		}
		
		.method 'append' (<this>: StringBuilder, value: Int16) public -> StringBuilder
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call StringBuilder::_append(builder: StringBuilder,s: ValueType)
			/* ::0016 */ .ret
			
		}
		
		.method 'toString' (<this>: StringBuilder) public override -> String
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call StringBuilder::_to_string(buffer: StringBuilder)
			/* ::0014 */ .ret
			
		}
		
		.method 'appendLine' (<this>: StringBuilder, value: String) public -> StringBuilder
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call StringBuilder::_appendLine(builder: StringBuilder,s: Object)
			/* ::0016 */ .ret
			
		}
		
		.method 'appendLine' (<this>: StringBuilder, value: Int64) public -> StringBuilder
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call StringBuilder::_appendLine(builder: StringBuilder,s: ValueType)
			/* ::0016 */ .ret
			
		}
		
		.method 'appendLine' (<this>: StringBuilder, value: Int32) public -> StringBuilder
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call StringBuilder::_appendLine(builder: StringBuilder,s: ValueType)
			/* ::0016 */ .ret
			
		}
		
		.method 'appendLine' (<this>: StringBuilder, value: Int16) public -> StringBuilder
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call StringBuilder::_appendLine(builder: StringBuilder,s: ValueType)
			/* ::0016 */ .ret
			
		}
		
		.method extern _append (builder: StringBuilder, s: Object) static private -> StringBuilder;
		
		.method extern _append (builder: StringBuilder, s: ValueType) static private -> StringBuilder;
		
		.method extern _appendLine (builder: StringBuilder, s: Object) static private -> StringBuilder;
		
		.method extern _appendLine (builder: StringBuilder, s: ValueType) static private -> StringBuilder;
		
		.method extern _init_buffer (builder: StringBuilder) static private -> Void;
		
		.method extern _clear_buffer (builder: StringBuilder) static private -> Void;
		
		.method extern _to_string (buffer: StringBuilder) static private -> String;
		
		.method 'get_capacity' (<this>: StringBuilder) public -> UInt32
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _capacity std%global::vein/lang/UInt32, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'TimeSpan' public extends 'Object'
	{
		.field 'TicksPerDay' as 'Int64' public
		.field 'TicksPerHour' as 'Int64' public
		.field 'TicksPerMinute' as 'Int64' public
		.field 'TicksPerSecond' as 'Int64' public
		.field 'TicksPerMillisecond' as 'Int64' public
		.field 'SecondsPerTick' as 'Float' public
		.field '_ticks' as 'Int64' internal
		.method 'ctor' (<this>: TimeSpan, ticks: Int64) public -> TimeSpan
		{
			.size 158
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf _ticks std%global::vein/lang/Int64, Public, Special
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .call Object::ctor(<this>: Object)
			/* ::0036 */ .ldc.i8.s 0xC92A69C000.long
			/* ::0038 */ .ldarg.0
			/* ::0048 */ .stf TicksPerDay std%global::vein/lang/Int64, Public, Special
			/* ::0058 */ .ldc.i8.s 0x861C46800.long
			/* ::0060 */ .ldarg.0
			/* ::0070 */ .stf TicksPerHour std%global::vein/lang/Int64, Public, Special
			/* ::0080 */ .ldc.i8.s 0x23C34600.long
			/* ::0082 */ .ldarg.0
			/* ::0092 */ .stf TicksPerMinute std%global::vein/lang/Int64, Public, Special
			/* ::0102 */ .ldc.i8.s 0x00989680.long
			/* ::0104 */ .ldarg.0
			/* ::0114 */ .stf TicksPerSecond std%global::vein/lang/Int64, Public, Special
			/* ::0124 */ .ldc.i8.s 0x00002710.long
			/* ::0126 */ .ldarg.0
			/* ::0136 */ .stf TicksPerMillisecond std%global::vein/lang/Int64, Public, Special
			/* ::0142 */ .ldc.f4 1E-07.float
			/* ::0144 */ .ldarg.0
			/* ::0154 */ .stf SecondsPerTick std%global::vein/lang/Float, Public, Special
			/* ::0156 */ .ldarg.0
			/* ::0158 */ .ret
			
		}
		
		.method 'toString' (<this>: TimeSpan) public override -> String
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.str .0x000000E2
			/* ::0008 */ .ret
			
		}
		
		.method 'get_Ticks' (<this>: TimeSpan) public -> Int64
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _ticks std%global::vein/lang/Int64, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method 'get_Days' (<this>: TimeSpan) public -> Int64
		{
			.size 28
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _ticks std%global::vein/lang/Int64, Public, Special
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .ldf TicksPerDay std%global::vein/lang/Int64, Public, Special
			/* ::0026 */ .div
			/* ::0028 */ .ret
			
		}
		
		.method 'get_Hours' (<this>: TimeSpan) public -> Int64
		{
			.size 40
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _ticks std%global::vein/lang/Int64, Public, Special
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .ldf TicksPerHour std%global::vein/lang/Int64, Public, Special
			/* ::0026 */ .div
			/* ::0036 */ .ldc.i8.s 0x00000018.long
			/* ::0038 */ .mod
			/* ::0040 */ .ret
			
		}
		
		.method 'get_Milliseconds' (<this>: TimeSpan) public -> Int64
		{
			.size 40
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _ticks std%global::vein/lang/Int64, Public, Special
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .ldf TicksPerMillisecond std%global::vein/lang/Int64, Public, Special
			/* ::0026 */ .div
			/* ::0036 */ .ldc.i8.s 0x000003E8.long
			/* ::0038 */ .mod
			/* ::0040 */ .ret
			
		}
		
		.method 'get_Minutes' (<this>: TimeSpan) public -> Int64
		{
			.size 40
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _ticks std%global::vein/lang/Int64, Public, Special
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .ldf TicksPerMinute std%global::vein/lang/Int64, Public, Special
			/* ::0026 */ .div
			/* ::0036 */ .ldc.i8.s 0x0000003C.long
			/* ::0038 */ .mod
			/* ::0040 */ .ret
			
		}
		
		.method 'get_Seconds' (<this>: TimeSpan) public -> Int64
		{
			.size 40
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _ticks std%global::vein/lang/Int64, Public, Special
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .ldf TicksPerSecond std%global::vein/lang/Int64, Public, Special
			/* ::0026 */ .div
			/* ::0036 */ .ldc.i8.s 0x0000003C.long
			/* ::0038 */ .mod
			/* ::0040 */ .ret
			
		}
		
		.method 'get_TotalSeconds' (<this>: TimeSpan) public -> Float
		{
			.size 28
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _ticks std%global::vein/lang/Int64, Public, Special
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .ldf SecondsPerTick std%global::vein/lang/Float, Public, Special
			/* ::0026 */ .mul
			/* ::0028 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'UInt16' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.field 'MaxValue' as 'UInt16' literal public
		.field 'MinValue' as 'UInt16' literal public
		.method special 'ctor' (<this>: UInt16) public special -> UInt16
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'UInt32' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.field 'MaxValue' as 'UInt32' literal public
		.field 'MinValue' as 'UInt32' literal public
		.method special 'ctor' (<this>: UInt32) public special -> UInt32
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'UInt64' public special extends 'ValueType'
	{
		.field '!!value' as 'ValueType' special
		.field 'MaxValue' as 'UInt64' literal public
		.field 'MinValue' as 'UInt64' literal public
		.method special 'ctor' (<this>: UInt64) public special -> UInt64
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'ValueType' public special extends 
	{
		.field '!!value' as 'Raw' special
		.method 'toString' (<this>: ValueType) public virtual -> String
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Sys::toString(value: ValueType)
			/* ::0014 */ .ret
			
		}
		
		.method special 'ctor' (<this>: ValueType) public special -> ValueType
		{
			.size 4
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Void' public special extends 'ValueType'
	{
		.method special 'ctor' (<this>: Void) public special -> Void
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Aspect' public special extends 'Object'
	{
		.field 'USAGE_METHOD' as 'Int32' public static
		.field 'USAGE_CLASS' as 'Int32' public static
		.field 'USAGE_FIELD' as 'Int32' public static
		.field 'USAGE_PROPERTY' as 'Int32' public static
		.method 'getUsages' (<this>: Aspect) public virtual -> Int32
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'ctor' (<this>: Aspect) public special -> Aspect
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 66
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldc.i4.1
			/* ::0004 */ .ldc.i4.1
			/* ::0006 */ .shl
			/* ::0016 */ .stsf USAGE_METHOD std%global::vein/lang/Int32, Public, Special
			/* ::0018 */ .ldc.i4.1
			/* ::0020 */ .ldc.i4.2
			/* ::0022 */ .shl
			/* ::0032 */ .stsf USAGE_CLASS std%global::vein/lang/Int32, Public, Special
			/* ::0034 */ .ldc.i4.1
			/* ::0036 */ .ldc.i4.3
			/* ::0038 */ .shl
			/* ::0048 */ .stsf USAGE_FIELD std%global::vein/lang/Int32, Public, Special
			/* ::0050 */ .ldc.i4.1
			/* ::0052 */ .ldc.i4.4
			/* ::0054 */ .shl
			/* ::0064 */ .stsf USAGE_PROPERTY std%global::vein/lang/Int32, Public, Special
			/* ::0066 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/aspects'
	.class 'LineAspect' public aspect extends 'Aspect'
	{
		.method 'getUsages' () public override -> Int32
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.i4.s 0x00000004.int
			/* ::0008 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/collections'
	.interface 'IYieldable' public abstract extends 'Object'
	{
		.method 'get_Current' (<this>: IYieldable) abstract -> Object
		
		.method 'set_Current' (<this>: IYieldable, value: Object) abstract -> Void
		
		.method 'MoveNext' (<this>: IYieldable) public abstract -> Boolean
		
		.method 'Reset' (<this>: IYieldable) public abstract -> Void
		
		.method special 'ctor' (<this>: IYieldable) public special -> IYieldable
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/collections'
	.interface 'IYield' public abstract extends 'Object'
	{
		.method 'get_Yield' (<this>: IYield) public abstract -> IYieldable
		
		.method 'set_Yield' (<this>: IYield, value: IYieldable) public abstract -> Void
		
		.method special 'ctor' (<this>: IYield) public special -> IYield
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/collections'
	.class 'Yieldable' public extends 'Object'
	{
		.field '_current' as 'Object' 
		.method 'set_Current' (<this>: Yieldable, value: Object) public -> Object
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf _current std%global::vein/lang/Object, Public, Special
			
		}
		
		.method 'get_Current' (<this>: Yieldable) public -> Object
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _current std%global::vein/lang/Object, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method special 'ctor' (<this>: Yieldable) public special -> Yieldable
		{
			.size 30
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldnull
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .stf _current std%global::vein/lang/Object, Public, Special
			/* ::0028 */ .ldarg.0
			/* ::0030 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'IEEEConsts' static internal extends 'Object'
	{
		.method extern getHalfNaN () public static -> Half;
		
		.method extern getFloatNaN () public static -> Float;
		
		.method extern getDecimalNaN () public static -> Decimal;
		
		.method extern getDoubleNaN () public static -> Double;
		
		.method extern getHalfInfinity () public static -> Half;
		
		.method extern getFloatInfinity () public static -> Float;
		
		.method extern getDecimalInfinity () public static -> Decimal;
		
		.method extern getDoubleInfinity () public static -> Double;
		
		.method extern getHalfNegativeInfinity () public static -> Half;
		
		.method extern getFloatNegativeInfinity () public static -> Float;
		
		.method extern getDecimalNegativeInfinity () public static -> Decimal;
		
		.method extern getDoubleNegativeInfinity () public static -> Double;
		
		.method special 'ctor' (<this>: IEEEConsts) public special -> IEEEConsts
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Sys' static internal extends 'Object'
	{
		.method extern toString (value: ValueType) public static -> String;
		
		.method extern toString (value: Object) public static -> String;
		
		.method extern queryPerformanceCounter () public static -> Int64;
		
		.method special 'ctor' (<this>: Sys) public special -> Sys
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/network'
	.class 'NetworkStream' public extends 'Object'
	{
		.method special 'ctor' (<this>: NetworkStream) public special -> NetworkStream
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0016 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/network'
	.class 'TcpListener' public extends 'Object'
	{
		.field '_port' as 'UInt16' 
		.field '_dualMode' as 'Boolean' 
		.field '_active' as 'Boolean' 
		.field '_socket' as 'TcpSocket' 
		.field 'ExclusiveAddressUse' as 'Boolean' public
		.method 'create' (port: UInt16) public static -> TcpListener
		{
			.size 4
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldnull
			/* ::0004 */ .ret
			
		}
		
		.method 'IsActive' (<this>: TcpListener) public -> Boolean
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _active std%global::vein/lang/Boolean, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method 'Start' (<this>: TcpListener) public -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
		.method 'ctor' (<this>: TcpListener, port: UInt16) private -> TcpListener
		{
			.size 86
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldnull
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .stf _port std%global::vein/lang/UInt16, Public, Special
			/* ::0028 */ .ldnull
			/* ::0030 */ .ldarg.0
			/* ::0040 */ .stf _dualMode std%global::vein/lang/Boolean, Public, Special
			/* ::0042 */ .ldnull
			/* ::0044 */ .ldarg.0
			/* ::0054 */ .stf _active std%global::vein/lang/Boolean, Public, Special
			/* ::0056 */ .ldnull
			/* ::0058 */ .ldarg.0
			/* ::0068 */ .stf _socket std%global::vein/lang/network/TcpSocket, Public
			/* ::0070 */ .ldnull
			/* ::0072 */ .ldarg.0
			/* ::0082 */ .stf ExclusiveAddressUse std%global::vein/lang/Boolean, Public, Special
			/* ::0084 */ .ldarg.0
			/* ::0086 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/network'
	.class 'TcpSocket' public extends 'Object'
	{
		.field '_port' as 'UInt16' 
		.field '_is_listing' as 'Boolean' 
		.field '_handle' as 'ValueType' 
		.field '_blocked' as 'Boolean' 
		.field '_connected' as 'Boolean' 
		.method 'IsBlocked' (<this>: TcpSocket) public -> Boolean
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _blocked std%global::vein/lang/Boolean, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method 'IsListed' (<this>: TcpSocket) public -> Boolean
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _is_listing std%global::vein/lang/Boolean, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method 'IsConnected' (<this>: TcpSocket) public -> Boolean
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _connected std%global::vein/lang/Boolean, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method 'Bind' (<this>: TcpSocket) public -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
		.method 'Send' (<this>: TcpSocket, buffer: Byte) public -> Int32
		{
			.size 4
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldc.i4.0
			/* ::0004 */ .ret
			
		}
		
		.method 'Listen' (<this>: TcpSocket, cq: Int32) public -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
		.method 'Create' (port: UInt16) public static -> TcpSocket
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'ctor' (<this>: TcpSocket) public special -> TcpSocket
		{
			.size 86
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldnull
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .stf _port std%global::vein/lang/UInt16, Public, Special
			/* ::0028 */ .ldnull
			/* ::0030 */ .ldarg.0
			/* ::0040 */ .stf _is_listing std%global::vein/lang/Boolean, Public, Special
			/* ::0042 */ .ldnull
			/* ::0044 */ .ldarg.0
			/* ::0054 */ .stf _handle std%global::vein/lang/ValueType, Public, Special
			/* ::0056 */ .ldnull
			/* ::0058 */ .ldarg.0
			/* ::0068 */ .stf _blocked std%global::vein/lang/Boolean, Public, Special
			/* ::0070 */ .ldnull
			/* ::0072 */ .ldarg.0
			/* ::0082 */ .stf _connected std%global::vein/lang/Boolean, Public, Special
			/* ::0084 */ .ldarg.0
			/* ::0086 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/numeric'
	.class 'BigInt' public extends 'Object', 'ValueType'
	{
		.method special 'ctor' (<this>: BigInt) public special -> BigInt
		{
			.size 28
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0026 */ .ldarg.0
			/* ::0028 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/numeric'
	.class 'Quaternion' public extends 'Object', 'ValueType'
	{
		.field 'X' as 'Float' public
		.field 'Y' as 'Float' public
		.field 'Z' as 'Float' public
		.field 'W' as 'Float' public
		.method 'IsZero' (<this>: Quaternion) public -> Boolean
		{
			.size 60
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf X std%global::vein/lang/Float, Public, Special
			/* ::0014 */ .ldarg.0
			/* ::0024 */ .ldf Y std%global::vein/lang/Float, Public, Special
			/* ::0026 */ .add
			/* ::0028 */ .ldarg.0
			/* ::0038 */ .ldf Z std%global::vein/lang/Float, Public, Special
			/* ::0040 */ .add
			/* ::0042 */ .ldarg.0
			/* ::0052 */ .ldf W std%global::vein/lang/Float, Public, Special
			/* ::0054 */ .add
			/* ::0056 */ .ldc.i4.0
			/* ::0058 */ .eql.t
			/* ::0060 */ .ret
			
		}
		
		.method 'ctor' (<this>: Quaternion, x: Float, y: Float, z: Float, w: Float)  -> Quaternion
		{
			.size 84
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf X std%global::vein/lang/Float, Public, Special
			/* ::0016 */ .ldarg.2
			/* ::0018 */ .ldarg.0
			/* ::0028 */ .stf Y std%global::vein/lang/Float, Public, Special
			/* ::0030 */ .ldarg.3
			/* ::0032 */ .ldarg.0
			/* ::0042 */ .stf Z std%global::vein/lang/Float, Public, Special
			/* ::0044 */ .ldarg.4
			/* ::0046 */ .ldarg.0
			/* ::0056 */ .stf W std%global::vein/lang/Float, Public, Special
			/* ::0058 */ .ldarg.0
			/* ::0068 */ .call Object::ctor(<this>: Object)
			/* ::0070 */ .ldarg.0
			/* ::0080 */ .call ValueType::ctor(<this>: ValueType)
			/* ::0082 */ .ldarg.0
			/* ::0084 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'TypeNotFoundFault' public extends 'Exception'
	{
		.method 'ctor' (<this>: TypeNotFoundFault, m: String) public -> TypeNotFoundFault
		{
			.size 30
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf message std%global::vein/lang/String, Public, Special
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .call Exception::ctor(<this>: Exception)
			/* ::0028 */ .ldarg.0
			/* ::0030 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'MemberNotFoundFault' public extends 'Exception'
	{
		.method 'ctor' (<this>: MemberNotFoundFault, m: String) public -> MemberNotFoundFault
		{
			.size 30
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf message std%global::vein/lang/String, Public, Special
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .call Exception::ctor(<this>: Exception)
			/* ::0028 */ .ldarg.0
			/* ::0030 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'MultipleTypeFoundFault' public extends 'Exception'
	{
		.method 'ctor' (<this>: MultipleTypeFoundFault, m: String) public -> MultipleTypeFoundFault
		{
			.size 30
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.1
			/* ::0004 */ .ldarg.0
			/* ::0014 */ .stf message std%global::vein/lang/String, Public, Special
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .call Exception::ctor(<this>: Exception)
			/* ::0028 */ .ldarg.0
			/* ::0030 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Field' public extends 'Object'
	{
		.field '_target' as 'Type' internal
		.field '_name' as 'String' internal
		.field '_vtoffset' as 'Int64' internal
		.method 'ctor' (<this>: Field) internal -> Field
		{
			.size 58
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldnull
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .stf _target std%global::vein/lang/Type, Public
			/* ::0028 */ .ldnull
			/* ::0030 */ .ldarg.0
			/* ::0040 */ .stf _name std%global::vein/lang/String, Public, Special
			/* ::0042 */ .ldnull
			/* ::0044 */ .ldarg.0
			/* ::0054 */ .stf _vtoffset std%global::vein/lang/Int64, Public, Special
			/* ::0056 */ .ldarg.0
			/* ::0058 */ .ret
			
		}
		
		.method extern getValue (targetObject: Object, f: Field) public static -> Object;
		
		.method extern setValue (targetObject: Object, f: Field, value: Object) public static -> Void;
		
		.method 'get_name' (<this>: Field) public -> String
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _name std%global::vein/lang/String, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method 'get_owner' (<this>: Field) public -> Type
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _target std%global::vein/lang/Type, Public
			/* ::0014 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Function' public extends 'Object'
	{
		.field '_target' as 'Type' internal
		.field '_vtoffset' as 'Int64' internal
		.field '_name' as 'String' internal
		.field '_quality_name' as 'String' internal
		.method 'ctor' (<this>: Function) internal -> Function
		{
			.size 72
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldnull
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .stf _target std%global::vein/lang/Type, Public
			/* ::0028 */ .ldnull
			/* ::0030 */ .ldarg.0
			/* ::0040 */ .stf _vtoffset std%global::vein/lang/Int64, Public, Special
			/* ::0042 */ .ldnull
			/* ::0044 */ .ldarg.0
			/* ::0054 */ .stf _name std%global::vein/lang/String, Public, Special
			/* ::0056 */ .ldnull
			/* ::0058 */ .ldarg.0
			/* ::0068 */ .stf _quality_name std%global::vein/lang/String, Public, Special
			/* ::0070 */ .ldarg.0
			/* ::0072 */ .ret
			
		}
		
		.method 'call' (<this>: Function) public -> Object
		{
			.size 24
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldsf empty std%global::vein/lang/Array, Public, Special
			/* ::0022 */ .call Function::_call(f: Function,args: Array)
			/* ::0024 */ .ret
			
		}
		
		.method 'call' (<this>: Function, args: Array) public -> Object
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call Function::_call(f: Function,args: Array)
			/* ::0016 */ .ret
			
		}
		
		.method 'createFunctionFrom' (target: Object, name: String) public static -> Function
		{
			.size 20
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0006 */ .ldc.i2.0
			/* ::0008 */ .ldc.i2.1
			/* ::0018 */ .call Function::_createFn(target: Object,name: String,ignoreCase: Boolean,throwWhenFailBind: Boolean)
			/* ::0020 */ .ret
			
		}
		
		.method 'createFunctionFrom' (target: Object, name: String, ignoreCase: Boolean) public static -> Function
		{
			.size 20
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0006 */ .ldarg.2
			/* ::0008 */ .ldc.i2.1
			/* ::0018 */ .call Function::_createFn(target: Object,name: String,ignoreCase: Boolean,throwWhenFailBind: Boolean)
			/* ::0020 */ .ret
			
		}
		
		.method 'createFunctionFrom' (target: Object, name: String, ignoreCase: Boolean, throwWhenFailBind: Boolean) public static -> Function
		{
			.size 20
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0006 */ .ldarg.2
			/* ::0008 */ .ldarg.3
			/* ::0018 */ .call Function::_createFn(target: Object,name: String,ignoreCase: Boolean,throwWhenFailBind: Boolean)
			/* ::0020 */ .ret
			
		}
		
		.method extern _call (f: Function, args: Array) static private -> Object;
		
		.method extern _createFn (target: Object, name: String, ignoreCase: Boolean, throwWhenFailBind: Boolean) static private -> Function;
		
		.method 'get_name' (<this>: Function) public -> String
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _name std%global::vein/lang/String, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method 'get_owner' (<this>: Function) public -> Type
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _target std%global::vein/lang/Type, Public
			/* ::0014 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Type' public extends 'Object'
	{
		.field '_unique_id' as 'UInt16' 
		.field '_module_id' as 'UInt16' 
		.field '_flags' as 'Int32' 
		.field '_name' as 'String' 
		.field '_namespace' as 'String' 
		.method 'ctor' (<this>: Type) internal -> Type
		{
			.size 86
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Object::ctor(<this>: Object)
			/* ::0014 */ .ldnull
			/* ::0016 */ .ldarg.0
			/* ::0026 */ .stf _unique_id std%global::vein/lang/UInt16, Public, Special
			/* ::0028 */ .ldnull
			/* ::0030 */ .ldarg.0
			/* ::0040 */ .stf _module_id std%global::vein/lang/UInt16, Public, Special
			/* ::0042 */ .ldnull
			/* ::0044 */ .ldarg.0
			/* ::0054 */ .stf _flags std%global::vein/lang/Int32, Public, Special
			/* ::0056 */ .ldnull
			/* ::0058 */ .ldarg.0
			/* ::0068 */ .stf _name std%global::vein/lang/String, Public, Special
			/* ::0070 */ .ldnull
			/* ::0072 */ .ldarg.0
			/* ::0082 */ .stf _namespace std%global::vein/lang/String, Public, Special
			/* ::0084 */ .ldarg.0
			/* ::0086 */ .ret
			
		}
		
		.method 'findByName' (s: String) public static -> Type
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .call Type::_findByName(name: String)
			/* ::0014 */ .ret
			
		}
		
		@effect global::vein/lang/Void;
		.method 'tryFindByName' (s: String) public static -> Type
		{
			.size 34
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .seh.enter 0x00000000.int
			/* ::0006 */ /* begin protection zone @0x6 */
			/* ::0008 */ .ldarg.0
			/* ::0018 */ .call Type::findByName(s: String)
			/* ::0020 */ .ret
			/* ::0026 */ .seh.leave.s label(0x0)
			/* defined-label id: 0x1, offset: 0x1A */
			/* ::0028 */ .nop
			/* defined-label id: 0x2, offset: 0x1C */
			/* ::0028 */ /* catch block $'any' @6 */
			/* ::0030 */ .ldnull
			/* ::0032 */ .ret
			/* ::0034 */ .seh.leave
			/* defined-label id: 0x0, offset: 0x22 */
			/* ::0034 */ /* end protection zone @0x6 */
			
		}
		
		.method 'findField' (<this>: Type, name: String) public -> Field
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call Type::_findField(t: Type,name: String)
			/* ::0016 */ .ret
			
		}
		
		.method 'findMethod' (<this>: Type, name: String) public -> Function
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0004 */ .ldarg.1
			/* ::0014 */ .call Type::_findField(t: Type,name: String)
			/* ::0016 */ .ret
			
		}
		
		.method extern _findByName (name: String) static private -> Type;
		
		.method extern _findField (t: Type, name: String) static private -> Field;
		
		.method extern _findMethod (t: Type, name: String) static private -> Function;
		
		.method 'get_isPublic' (<this>: Type) public -> Boolean
		{
			.size 26
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _flags std%global::vein/lang/Int32, Public, Special
			/* ::0014 */ .ldc.i4.1
			/* ::0016 */ .ldc.i4.1
			/* ::0018 */ .shl
			/* ::0020 */ .and
			/* ::0022 */ .ldc.i4.0
			/* ::0024 */ .eql.f
			/* ::0026 */ .ret
			
		}
		
		.method 'get_isStatic' (<this>: Type) public -> Boolean
		{
			.size 26
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _flags std%global::vein/lang/Int32, Public, Special
			/* ::0014 */ .ldc.i4.1
			/* ::0016 */ .ldc.i4.2
			/* ::0018 */ .shl
			/* ::0020 */ .and
			/* ::0022 */ .ldc.i4.0
			/* ::0024 */ .eql.f
			/* ::0026 */ .ret
			
		}
		
		.method 'get_isPrivate' (<this>: Type) public -> Boolean
		{
			.size 26
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _flags std%global::vein/lang/Int32, Public, Special
			/* ::0014 */ .ldc.i4.1
			/* ::0016 */ .ldc.i4.5
			/* ::0018 */ .shl
			/* ::0020 */ .and
			/* ::0022 */ .ldc.i4.0
			/* ::0024 */ .eql.f
			/* ::0026 */ .ret
			
		}
		
		.method 'get_isInterface' (<this>: Type) public -> Boolean
		{
			.size 30
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _flags std%global::vein/lang/Int32, Public, Special
			/* ::0014 */ .ldc.i4.1
			/* ::0020 */ .ldc.i4.s 0x00000008.int
			/* ::0022 */ .shl
			/* ::0024 */ .and
			/* ::0026 */ .ldc.i4.0
			/* ::0028 */ .eql.f
			/* ::0030 */ .ret
			
		}
		
		.method 'get_name' (<this>: Type) public -> String
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _name std%global::vein/lang/String, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method 'get_namespace' (<this>: Type) public -> String
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _namespace std%global::vein/lang/String, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method 'get_flags' (<this>: Type) public -> Int32
		{
			.size 14
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldarg.0
			/* ::0012 */ .ldf _flags std%global::vein/lang/Int32, Public, Special
			/* ::0014 */ .ret
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/workspace'
	.class 'DeprecatedAspect' public aspect extends 'Aspect'
	{
		.method 'getUsages' () public override -> Int32
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.i4.s 0x00000004.int
			/* ::0008 */ .ret
			
		}
		
	}
	
	.namespace 'global::vein/lang/workspace'
	.class 'MaybeNullableAspect' public aspect extends 'Aspect'
	{
		.method 'getUsages' () public override -> Int32
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.i4.s 0x00000004.int
			/* ::0008 */ .ret
			
		}
		
	}
	
}
