.module 'corlib'::'1.0.0.0'
{

	.table const
	{
		.s 000000:'Application'
		.s 000001:'global::vein/lang'
		.s 000002:'corlib'
		.s 000003:'BitConvert'
		.s 000004:'Guid'
		.s 000005:'Mathf'
		.s 000006:'Out'
		.s 000007:'Range'
		.s 000008:'StringBuilder'
		.s 000009:'IYieldable'
		.s 000010:'global::vein/lang/collections'
		.s 000011:'IYield'
		.s 000012:'Yieldable'
		.s 000013:'IEEEConsts'
		.s 000014:'NetworkStream'
		.s 000015:'global::vein/lang/network'
		.s 000016:'TcpListener'
		.s 000017:'TcpSocket'
		.s 000018:'BigInt'
		.s 000019:'global::vein/lang/numeric'
		.s 000020:'Quaternion'
		.s 000021:'@_get_os_value'
		.s 000022:'@_get_os_value()'
		.s 000023:'@_exit'
		.s 000024:'@_exit(String,Int32)'
		.s 000025:'@_switch_flag'
		.s 000026:'@_switch_flag(String,Boolean)'
		.s 000027:'GetFrameworkName'
		.s 000028:'GetFrameworkName()'
		.s 000029:'Shutdown'
		.s 000030:'Shutdown(String,Int32)'
		.s 000031:'SwitchFlag'
		.s 000032:'SwitchFlag(String,Boolean)'
		.s 000033:'toString'
		.s 000034:'toString()'
		.s 000035:'get_Epsilon'
		.s 000036:'get_Epsilon()'
		.s 000037:'get_PositiveInfinity'
		.s 000038:'get_PositiveInfinity()'
		.s 000039:'get_NegativeInfinity'
		.s 000040:'get_NegativeInfinity()'
		.s 000041:'get_NaN'
		.s 000042:'get_NaN()'
		.s 000043:'Abs'
		.s 000044:'Abs(Float)'
		.s 000045:'@_println'
		.s 000046:'@_println(String)'
		.s 000047:'new'
		.s 000048:'new(UInt32,UInt32)'
		.s 000049:'get_Current'
		.s 000050:'get_Current()'
		.s 000051:'set_Current'
		.s 000052:'set_Current(Object)'
		.s 000053:'MoveNext'
		.s 000054:'MoveNext()'
		.s 000055:'Reset'
		.s 000056:'Reset()'
		.s 000057:'get_Yield'
		.s 000058:'get_Yield()'
		.s 000059:'set_Yield'
		.s 000060:'set_Yield(IYieldable)'
		.s 000061:'getHalfNaN'
		.s 000062:'getHalfNaN()'
		.s 000063:'getFloatNaN'
		.s 000064:'getFloatNaN()'
		.s 000065:'getDecimalNaN'
		.s 000066:'getDecimalNaN()'
		.s 000067:'getDoubleNaN'
		.s 000068:'getDoubleNaN()'
		.s 000069:'getHalfInfinity'
		.s 000070:'getHalfInfinity()'
		.s 000071:'getFloatInfinity'
		.s 000072:'getFloatInfinity()'
		.s 000073:'getDecimalInfinity'
		.s 000074:'getDecimalInfinity()'
		.s 000075:'getDoubleInfinity'
		.s 000076:'getDoubleInfinity()'
		.s 000077:'getHalfNegativeInfinity'
		.s 000078:'getHalfNegativeInfinity()'
		.s 000079:'getFloatNegativeInfinity'
		.s 000080:'getFloatNegativeInfinity()'
		.s 000081:'getDecimalNegativeInfinity'
		.s 000082:'getDecimalNegativeInfinity()'
		.s 000083:'getDoubleNegativeInfinity'
		.s 000084:'getDoubleNegativeInfinity()'
		.s 000085:'create'
		.s 000086:'create(UInt16)'
		.s 000087:'IsActive'
		.s 000088:'IsActive()'
		.s 000089:'Start'
		.s 000090:'Start()'
		.s 000091:'new(UInt16)'
		.s 000092:'IsBlocked'
		.s 000093:'IsBlocked()'
		.s 000094:'IsListed'
		.s 000095:'IsListed()'
		.s 000096:'IsConnected'
		.s 000097:'IsConnected()'
		.s 000098:'Bind'
		.s 000099:'Bind()'
		.s 000100:'Send'
		.s 000101:'Send(Byte)'
		.s 000102:'Listen'
		.s 000103:'Listen(Int32)'
		.s 000104:'Create'
		.s 000105:'Create(UInt16)'
		.s 000106:'IsZero'
		.s 000107:'IsZero()'
		.s 000108:'Application.getPlatform()'
		.s 000109:'ctor()'
		.s 000110:'type_ctor()'
		.s 000111:'Array'
		.s 000112:'<Object>'
		.s 000113:'<Value>'
		.s 000114:'msg'
		.s 000115:'exitCode'
		.s 000116:'key'
		.s 000117:'value'
		.s 000118:'x'
		.s 000119:'start'
		.s 000120:'end'
		.s 000121:'port'
		.s 000122:'buffer'
		.s 000123:'cq'
		.s 000124:'1.0.0.0'
		.t 000000:'corlib%global::vein/lang/Application'
		.t 000001:'corlib%global::vein/lang/Exception'
		.t 000002:'corlib%global::vein/lang/ValueType'
		.t 000003:'corlib%global::vein/lang/Guid'
		.t 000004:'corlib%global::vein/lang/IEEEConsts'
		.t 000005:'corlib%global::vein/lang/Half'
		.t 000006:'corlib%global::vein/lang/Range'
		.t 000007:'corlib%global::vein/lang/collections/Yieldable'
		.t 000008:'corlib%global::vein/lang/network/TcpListener'
		.t 000009:'corlib%global::vein/lang/network/TcpSocket'
		.t 000010:'corlib%global::vein/lang/numeric/Quaternion'
		.t 000011:'corlib%global::vein/lang/Object'
		.t 000012:'corlib%global::vein/lang/Int32'
		.t 000013:'corlib%global::vein/lang/Void'
		.t 000014:'corlib%global::vein/lang/String'
		.t 000015:'corlib%global::vein/lang/Boolean'
		.t 000016:'corlib%global::vein/lang/Array'
		.t 000017:'corlib%global::vein/lang/Int64'
		.t 000018:'corlib%global::vein/lang/BitConvert'
		.t 000019:'corlib%global::vein/lang/Byte'
		.t 000020:'corlib%global::vein/lang/Char'
		.t 000021:'corlib%global::vein/lang/Decimal'
		.t 000022:'corlib%global::vein/lang/Double'
		.t 000023:'corlib%global::vein/lang/Float'
		.t 000024:'corlib%global::vein/lang/Int16'
		.t 000025:'corlib%global::vein/lang/Mathf'
		.t 000026:'corlib%global::vein/lang/Out'
		.t 000027:'corlib%global::vein/lang/UInt32'
		.t 000028:'corlib%global::vein/lang/StringBuilder'
		.t 000029:'corlib%global::vein/lang/UInt16'
		.t 000030:'corlib%global::vein/lang/collections/IYieldable'
		.t 000031:'corlib%global::vein/lang/collections/IYield'
		.t 000032:'corlib%global::vein/lang/network/NetworkStream'
		.t 000033:'corlib%global::vein/lang/numeric/BigInt'
		.f 000000:'Array._value'
		.f 000001:'Array._block'
		.f 000002:'Array.Length'
		.f 000003:'Array.Rank'
		.f 000004:'Boolean._value'
		.f 000005:'Boolean.True'
		.f 000006:'Boolean.False'
		.f 000007:'Boolean.TrueString'
		.f 000008:'Boolean.FalseString'
		.f 000009:'Byte._value'
		.f 000010:'Char._value'
		.f 000011:'Decimal._value'
		.f 000012:'Double._value'
		.f 000013:'Exception.message'
		.f 000014:'Float._value'
		.f 000015:'Guid.Empty'
		.f 000016:'Guid._a'
		.f 000017:'Guid._b'
		.f 000018:'Guid._c'
		.f 000019:'Half._value'
		.f 000020:'Half.NaN'
		.f 000021:'Half.NegativeInfinity'
		.f 000022:'Half.PositiveInfinity'
		.f 000023:'Half.Epsilon'
		.f 000024:'Int16._value'
		.f 000025:'Int16.MaxValue'
		.f 000026:'Int16.MinValue'
		.f 000027:'Int32._value'
		.f 000028:'Int32.MaxValue'
		.f 000029:'Int32.MinValue'
		.f 000030:'Int64._value'
		.f 000031:'Int64.MaxValue'
		.f 000032:'Int64.MinValue'
		.f 000033:'Mathf.E'
		.f 000034:'Mathf.PI'
		.f 000035:'Mathf.Tau'
		.f 000036:'Mathf.defaultRoundDigits'
		.f 000037:'Range.Start'
		.f 000038:'Range.End'
		.f 000039:'String._value'
		.f 000040:'String.Length'
		.f 000041:'UInt16._value'
		.f 000042:'UInt16.MaxValue'
		.f 000043:'UInt16.MinValue'
		.f 000044:'UInt32._value'
		.f 000045:'UInt32.MaxValue'
		.f 000046:'UInt32.MinValue'
		.f 000047:'Yieldable._current'
		.f 000048:'TcpListener._port'
		.f 000049:'TcpListener._dualMode'
		.f 000050:'TcpListener._active'
		.f 000051:'TcpListener._socket'
		.f 000052:'TcpListener.ExclusiveAddressUse'
		.f 000053:'TcpSocket._port'
		.f 000054:'TcpSocket._is_listing'
		.f 000055:'TcpSocket._handle'
		.f 000056:'TcpSocket._blocked'
		.f 000057:'TcpSocket._connected'
		.f 000058:'Quaternion.X'
		.f 000059:'Quaternion.Y'
		.f 000060:'Quaternion.Z'
		.f 000061:'Quaternion.W'
	}

	@'aspect/Native/class/Application._0' = 'internal.h'
	@'aspect/Native/class/Application/method/@_get_os_value._0' = 'internal.h'
	@'aspect/Native/class/Application/method/@_get_os_value._1' = '@_get_os_value'
	@'aspect/Native/class/Array/field/_value._0' = '!!value'
	@'aspect/Native/class/Array/field/_block._0' = '!!block'
	@'aspect/Native/class/Array/field/Length._0' = '!!size'
	@'aspect/Native/class/Array/field/Rank._0' = '!!rank'
	@'aspect/Native/class/Boolean/field/_value._0' = '!!value'
	@'aspect/Native/class/Byte/field/_value._0' = '!!value'
	@'aspect/Native/class/Char/field/_value._0' = '!!value'
	@'aspect/Native/class/Decimal/field/_value._0' = '!!value'
	@'aspect/Native/class/Double/field/_value._0' = '!!value'
	@'aspect/Native/class/Float/field/_value._0' = '!!value'
	@'aspect/Native/class/Half/field/_value._0' = '!!value'
	@'aspect/Native/class/Int16/field/_value._0' = '!!value'
	@'aspect/Native/class/Int32/field/_value._0' = '!!value'
	@'aspect/Native/class/Int64/field/_value._0' = '!!value'
	@'aspect/Native/class/Out/method/@_println._0' = 'internal.h'
	@'aspect/Native/class/Out/method/@_println._1' = '@_println'
	@'aspect/Native/class/String/field/_value._0' = '!!value'
	@'aspect/Native/class/UInt16/field/_value._0' = '!!value'
	@'aspect/Native/class/UInt32/field/_value._0' = '!!value'
	@'aspect/Native/class/IEEEConsts/method/getHalfNaN._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getHalfNaN._1' = 'i_call_get_Half_NaN'
	@'aspect/Native/class/IEEEConsts/method/getFloatNaN._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getFloatNaN._1' = 'i_call_get_Float_NaN'
	@'aspect/Native/class/IEEEConsts/method/getDecimalNaN._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getDecimalNaN._1' = 'i_call_get_Decimal_NaN'
	@'aspect/Native/class/IEEEConsts/method/getDoubleNaN._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getDoubleNaN._1' = 'i_call_get_Double_NaN'
	@'aspect/Native/class/IEEEConsts/method/getHalfInfinity._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getHalfInfinity._1' = 'i_call_get_Half_Infinity'
	@'aspect/Native/class/IEEEConsts/method/getFloatInfinity._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getFloatInfinity._1' = 'i_call_get_Float_Infinity'
	@'aspect/Native/class/IEEEConsts/method/getDecimalInfinity._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getDecimalInfinity._1' = 'i_call_get_Decimal_Infinity'
	@'aspect/Native/class/IEEEConsts/method/getDoubleInfinity._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getDoubleInfinity._1' = 'i_call_get_Double_Infinity'
	@'aspect/Native/class/IEEEConsts/method/getHalfNegativeInfinity._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getHalfNegativeInfinity._1' = 'i_call_get_Half_NegativeInfinity'
	@'aspect/Native/class/IEEEConsts/method/getFloatNegativeInfinity._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getFloatNegativeInfinity._1' = 'i_call_get_Float_NegativeInfinity'
	@'aspect/Native/class/IEEEConsts/method/getDecimalNegativeInfinity._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getDecimalNegativeInfinity._1' = 'i_call_get_Decimal_NegativeInfinity'
	@'aspect/Native/class/IEEEConsts/method/getDoubleNegativeInfinity._0' = 'internal.h'
	@'aspect/Native/class/IEEEConsts/method/getDoubleNegativeInfinity._1' = 'i_call_get_Double_NegativeInfinity'
	@'Boolean.True' = 'True'
	@'Boolean.False' = 'False'
	@'Boolean.TrueString' = 'true'
	@'Boolean.FalseString' = 'false'
	@'Int16.MaxValue' = '32767'
	@'Int16.MinValue' = '-32768'
	@'Int32.MaxValue' = '2147483647'
	@'Int32.MinValue' = '-2147483648'
	@'Int64.MaxValue' = '9223372036854775807'
	@'Int64.MinValue' = '-9223372036854775808'
	@'Mathf.E' = '2.7182817'
	@'Mathf.PI' = '3.1415927'
	@'Mathf.Tau' = '6.2831855'
	@'Mathf.defaultRoundDigits' = '6'
	@'UInt16.MaxValue' = '65535'
	@'UInt16.MinValue' = '0'
	@'UInt32.MaxValue' = '4294967295'
	@'UInt32.MinValue' = '0'
	
	.namespace 'global::vein/lang'
	.class 'Application' public static extends 'Object'
	{
		.method extern @_get_os_value () static private -> Int32;
		
		.method extern @_exit (msg: String, exitCode: Int32) static private -> Void;
		
		.method extern @_switch_flag (key: String, value: Boolean) static private -> Void;
		
		.method 'GetFrameworkName' () public static -> String
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.str .0x0000006C
			/* ::0008 */ .ret
			
		}
		
		.method 'Shutdown' (msg: String, exitCode: Int32) public static -> Void
		{
			.size 25
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldarg.s 0x00000001.int
			/* ::0012 */ .ldarg.s 0x00000002.int
			/* ::0023 */ .call Application::@_exit(msg: String,exitCode: Int32)
			/* ::0025 */ .ret
			
		}
		
		.method 'SwitchFlag' (key: String, value: Boolean) public static -> Void
		{
			.size 25
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldarg.s 0x00000001.int
			/* ::0012 */ .ldarg.s 0x00000002.int
			/* ::0023 */ .call Application::@_switch_flag(key: String,value: Boolean)
			/* ::0025 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Array' public special extends 'Object'
	{
		.field '_value' as 'ValueType' special
		.field '_block' as 'Int64' special
		.field 'Length' as 'Int64' public special readonly
		.field 'Rank' as 'Int64' public special readonly
		.method 'toString' () public override -> String
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.str .0x0000006F
			/* ::0008 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'BitConvert' public extends 'Object'
	{
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Boolean' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.field 'True' as 'Boolean' literal public
		.field 'False' as 'Boolean' literal public
		.field 'TrueString' as 'String' literal public
		.field 'FalseString' as 'String' literal public
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Byte' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Char' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Decimal' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Double' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Exception' public special extends 'Object'
	{
		.field 'message' as 'String' public
		.method special 'ctor' () public special -> Void
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldnull
			/* ::0012 */ .stf message corlib%global::vein/lang/String, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Float' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Guid' public extends 'Object', 'ValueType'
	{
		.field 'Empty' as 'Guid' public static readonly
		.field '_a' as 'Int32' 
		.field '_b' as 'Int16' 
		.field '_c' as 'Int16' 
		.method special 'ctor' () public special -> Void
		{
			.size 47
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0011 */ .call ValueType::ctor()
			/* ::0013 */ .ldnull
			/* ::0023 */ .stf _a corlib%global::vein/lang/Int32, Public, Special
			/* ::0025 */ .ldnull
			/* ::0035 */ .stf _b corlib%global::vein/lang/Int16, Public, Special
			/* ::0037 */ .ldnull
			/* ::0047 */ .stf _c corlib%global::vein/lang/Int16, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 27
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .newobj [corlib%global::vein/lang/Guid] 
			/* ::0017 */ .call Guid::ctor()
			/* ::0027 */ .stsf Empty corlib%global::vein/lang/Guid, Public
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Half' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.field 'NaN' as 'Half' public static
		.field 'NegativeInfinity' as 'Half' public static
		.field 'PositiveInfinity' as 'Half' public static
		.field 'Epsilon' as 'Half' public static
		.method special 'get_Epsilon' () public special -> Half
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.f2 5.9604645E-08.float
			/* ::0008 */ .ret
			
		}
		
		.method special 'get_PositiveInfinity' () public special -> Half
		{
			.size 13
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0011 */ .call IEEEConsts::getHalfInfinity()
			/* ::0013 */ .ret
			
		}
		
		.method special 'get_NegativeInfinity' () public special -> Half
		{
			.size 13
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0011 */ .call IEEEConsts::getHalfNegativeInfinity()
			/* ::0013 */ .ret
			
		}
		
		.method special 'get_NaN' () public special -> Half
		{
			.size 13
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0011 */ .call IEEEConsts::getHalfNaN()
			/* ::0013 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 48
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldnull
			/* ::0012 */ .stsf NaN corlib%global::vein/lang/Half, Public, Special
			/* ::0014 */ .ldnull
			/* ::0024 */ .stsf NegativeInfinity corlib%global::vein/lang/Half, Public, Special
			/* ::0026 */ .ldnull
			/* ::0036 */ .stsf PositiveInfinity corlib%global::vein/lang/Half, Public, Special
			/* ::0038 */ .ldnull
			/* ::0048 */ .stsf Epsilon corlib%global::vein/lang/Half, Public, Special
			
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Int16' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.field 'MaxValue' as 'Int16' literal public
		.field 'MinValue' as 'Int16' literal public
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Int32' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.field 'MaxValue' as 'Int32' literal public
		.field 'MinValue' as 'Int32' literal public
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Int64' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.field 'MaxValue' as 'Int64' literal public
		.field 'MinValue' as 'Int64' literal public
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Mathf' public static extends 'Object'
	{
		.field 'E' as 'Float' literal public
		.field 'PI' as 'Float' literal public
		.field 'Tau' as 'Float' literal public
		.field 'defaultRoundDigits' as 'Int32' literal
		.method 'Abs' (x: Float) public static -> Float
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.f4 12.float
			/* ::0008 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Object' public special extends 
	{
		.method 'toString' () public virtual -> String
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.str .0x00000070
			/* ::0008 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Out' public static extends 'Object'
	{
		.method extern @_println (value: String) public static -> Void;
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'Range' public special extends 'Object', 'ValueType'
	{
		.field 'Start' as 'UInt32' public
		.field 'End' as 'UInt32' public
		.method 'new' (start: UInt32, end: UInt32)  -> Void
		{
			.size 34
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldarg.s 0x00000001.int
			/* ::0016 */ .stf Start corlib%global::vein/lang/UInt32, Public, Special
			/* ::0022 */ .ldarg.s 0x00000002.int
			/* ::0032 */ .stf End corlib%global::vein/lang/UInt32, Public, Special
			/* ::0034 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 35
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0011 */ .call ValueType::ctor()
			/* ::0013 */ .ldnull
			/* ::0023 */ .stf Start corlib%global::vein/lang/UInt32, Public, Special
			/* ::0025 */ .ldnull
			/* ::0035 */ .stf End corlib%global::vein/lang/UInt32, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'String' public special extends 'Object'
	{
		.field '_value' as 'ValueType' special
		.field 'Length' as 'Int32' public special
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'StringBuilder' public extends 'Object'
	{
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'UInt16' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.field 'MaxValue' as 'UInt16' literal public
		.field 'MinValue' as 'UInt16' literal public
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'UInt32' public special extends 'ValueType'
	{
		.field '_value' as 'ValueType' special
		.field 'MaxValue' as 'UInt32' literal public
		.field 'MinValue' as 'UInt32' literal public
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'ValueType' public special extends 
	{
		.method 'toString' () public virtual -> String
		{
			.size 8
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldc.str .0x00000071
			/* ::0008 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.struct 'Void' public special extends 'ValueType'
	{
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang/collections'
	.interface 'IYieldable' public abstract extends 'Object'
	{
		.method 'get_Current' () abstract -> Object
		
		.method 'set_Current' (value: Object) abstract -> Void
		
		.method 'MoveNext' () public abstract -> Boolean
		
		.method 'Reset' () public abstract -> Void
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang/collections'
	.interface 'IYield' public abstract extends 'Object'
	{
		.method 'get_Yield' () public abstract -> IYieldable
		
		.method 'set_Yield' (value: IYieldable) public abstract -> Void
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang/collections'
	.class 'Yieldable' public extends 'Object'
	{
		.field '_current' as 'Object' 
		.method 'set_Current' (value: Object) public -> Object
		{
			.size 16
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0006 */ .ldarg.s 0x00000001.int
			/* ::0016 */ .stf _current corlib%global::vein/lang/Object, Public, Special
			
		}
		
		.method 'get_Current' () public -> Object
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .ldf _current corlib%global::vein/lang/Object, Public, Special
			/* ::0012 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldnull
			/* ::0012 */ .stf _current corlib%global::vein/lang/Object, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang'
	.class 'IEEEConsts' static internal extends 'Object'
	{
		.method extern getHalfNaN () public static -> Half;
		
		.method extern getFloatNaN () public static -> Float;
		
		.method extern getDecimalNaN () public static -> Decimal;
		
		.method extern getDoubleNaN () public static -> Double;
		
		.method extern getHalfInfinity () public static -> Half;
		
		.method extern getFloatInfinity () public static -> Float;
		
		.method extern getDecimalInfinity () public static -> Decimal;
		
		.method extern getDoubleInfinity () public static -> Double;
		
		.method extern getHalfNegativeInfinity () public static -> Half;
		
		.method extern getFloatNegativeInfinity () public static -> Float;
		
		.method extern getDecimalNegativeInfinity () public static -> Decimal;
		
		.method extern getDoubleNegativeInfinity () public static -> Double;
		
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang/network'
	.class 'NetworkStream' public extends 'Object'
	{
		.method special 'ctor' () public special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang/network'
	.class 'TcpListener' public extends 'Object'
	{
		.field '_port' as 'UInt16' 
		.field '_dualMode' as 'Boolean' 
		.field '_active' as 'Boolean' 
		.field '_socket' as 'TcpSocket' 
		.field 'ExclusiveAddressUse' as 'Boolean' public
		.method 'create' (port: UInt16) public static -> TcpListener
		{
			.size 4
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldnull
			/* ::0004 */ .ret
			
		}
		
		.method 'IsActive' () public -> Boolean
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .ldf _active corlib%global::vein/lang/Boolean, Public, Special
			/* ::0012 */ .ret
			
		}
		
		.method 'Start' () public -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
		.method 'new' (port: UInt16) private -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 60
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldnull
			/* ::0012 */ .stf _port corlib%global::vein/lang/UInt16, Public, Special
			/* ::0014 */ .ldnull
			/* ::0024 */ .stf _dualMode corlib%global::vein/lang/Boolean, Public, Special
			/* ::0026 */ .ldnull
			/* ::0036 */ .stf _active corlib%global::vein/lang/Boolean, Public, Special
			/* ::0038 */ .ldnull
			/* ::0048 */ .stf _socket corlib%global::vein/lang/network/TcpSocket, Public
			/* ::0050 */ .ldnull
			/* ::0060 */ .stf ExclusiveAddressUse corlib%global::vein/lang/Boolean, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang/network'
	.class 'TcpSocket' public extends 'Object'
	{
		.field '_port' as 'UInt16' 
		.field '_is_listing' as 'Boolean' 
		.field '_handle' as 'ValueType' 
		.field '_blocked' as 'Boolean' 
		.field '_connected' as 'Boolean' 
		.method 'IsBlocked' () public -> Boolean
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .ldf _blocked corlib%global::vein/lang/Boolean, Public, Special
			/* ::0012 */ .ret
			
		}
		
		.method 'IsListed' () public -> Boolean
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .ldf _is_listing corlib%global::vein/lang/Boolean, Public, Special
			/* ::0012 */ .ret
			
		}
		
		.method 'IsConnected' () public -> Boolean
		{
			.size 12
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .ldf _connected corlib%global::vein/lang/Boolean, Public, Special
			/* ::0012 */ .ret
			
		}
		
		.method 'Bind' () public -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
		.method 'Send' (buffer: Byte) public -> Int32
		{
			.size 4
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldc.i4.0
			/* ::0004 */ .ret
			
		}
		
		.method 'Listen' (cq: Int32) public -> Void
		{
			.size 2
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ret
			
		}
		
		.method 'Create' (port: UInt16) public static -> TcpSocket
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 60
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0002 */ .ldnull
			/* ::0012 */ .stf _port corlib%global::vein/lang/UInt16, Public, Special
			/* ::0014 */ .ldnull
			/* ::0024 */ .stf _is_listing corlib%global::vein/lang/Boolean, Public, Special
			/* ::0026 */ .ldnull
			/* ::0036 */ .stf _handle corlib%global::vein/lang/ValueType, Public, Special
			/* ::0038 */ .ldnull
			/* ::0048 */ .stf _blocked corlib%global::vein/lang/Boolean, Public, Special
			/* ::0050 */ .ldnull
			/* ::0060 */ .stf _connected corlib%global::vein/lang/Boolean, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang/numeric'
	.class 'BigInt' public extends 'Object', 'ValueType'
	{
		.method special 'ctor' () public special -> Void
		{
			.size 11
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0011 */ .call ValueType::ctor()
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
	.namespace 'global::vein/lang/numeric'
	.class 'Quaternion' public extends 'Object', 'ValueType'
	{
		.field 'X' as 'Float' public
		.field 'Y' as 'Float' public
		.field 'Z' as 'Float' public
		.field 'W' as 'Float' public
		.method 'IsZero' () public -> Boolean
		{
			.size 52
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0010 */ .ldf X corlib%global::vein/lang/Float, Public, Special
			/* ::0012 */ .add
			/* ::0022 */ .ldf Y corlib%global::vein/lang/Float, Public, Special
			/* ::0024 */ .add
			/* ::0034 */ .ldf Z corlib%global::vein/lang/Float, Public, Special
			/* ::0036 */ .add
			/* ::0046 */ .ldf W corlib%global::vein/lang/Float, Public, Special
			/* ::0048 */ .eql.t
			/* ::0050 */ .ldc.i4.0
			/* ::0052 */ .ret
			
		}
		
		.method special 'ctor' () public special -> Void
		{
			.size 59
			.maxstack 0x00000040
			.locals 0x00000000
			
			.locals { }
			/* ::0011 */ .call ValueType::ctor()
			/* ::0013 */ .ldnull
			/* ::0023 */ .stf X corlib%global::vein/lang/Float, Public, Special
			/* ::0025 */ .ldnull
			/* ::0035 */ .stf Y corlib%global::vein/lang/Float, Public, Special
			/* ::0037 */ .ldnull
			/* ::0047 */ .stf Z corlib%global::vein/lang/Float, Public, Special
			/* ::0049 */ .ldnull
			/* ::0059 */ .stf W corlib%global::vein/lang/Float, Public, Special
			
		}
		
		.method special 'type_ctor' () public static special -> Void
		{
			.size 0
			.maxstack 0x00000040
			.locals 0x00000000
		}
		
	}
	
}
