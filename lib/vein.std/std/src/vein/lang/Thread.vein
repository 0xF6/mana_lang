#space "vein/lang"


public class Thread : Object
{
    [native("__internal__", "@_threading_begin_affinity")]
    public extern static BeginAffinity(): void;
    [native("__internal__", "@_threading_end_affinity")]
    public extern static EndAffinity(): void;
    [native("__internal__", "@_threading_begin_critical_region")]
    public extern static BeginCriticalRegion(): void;
    [native("__internal__", "@_threading_end_critical_region")]
    public extern static EndCriticalRegion(): void;
    [native("__internal__", "@_threading_memory_barrier")]
    public extern static MemoryBarrier(): void;
    [native("__internal__", "@_threading_yield")]
    public extern static Yield(): void;
    [native("__internal__", "@_threading_create")]
    public extern static Create(fn: Function): Thread;
    [native("__internal__", "@_threading_sleep")]
    public extern static Sleep(ms: u32): Thread;

    public Join(): void {
        Thread._join(this);
    }
    public Start(): void {
        Thread._start(this);
    }

    [native("__internal__", "@_threading_join")]
    private extern static _join(thread: Thread): Thread;
    [native("__internal__", "@_threading_start")]
    private extern static _start(thread: Thread): Thread;
}