#space "std"

public class NetworkStream : Stream
{
    new(handle: ClientHandle) {
        this._handle = handle;
    }

    private _handle: ClientHandle;

    override canRead(): bool |> true;
    override canWrite(): bool |> true;
    override len(): u64 {
        return 0;
    }
    override position(): u64 {
        return 0;
    }
    override flush(): void { }
    override read(buffer: Array<u8>): i32
        |> 0;
    override write(buffer: Array<u8>): void { }

    override read(buffer: Span<u8>): i32
        |> self.socket_receive(this._handle, buffer);
    override write(buffer: Span<u8>): void 
        |> self.socket_send(this._handle, buffer);


    [native("__internal__", "socket_receive")]
    private static extern socket_receive(handle: ClientHandle, buffer: Object): i32;
    [native("__internal__", "socket_send")]
    private static extern socket_send(handle: ClientHandle, buffer: Object): void;
}