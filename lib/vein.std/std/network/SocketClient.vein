#space "std"

public class SocketClient {
    private _handle: ClientHandle;
    private _server: SocketServer;

    private _writer: StreamWriter;
    private _reader: StreamReader;
    private _original: NetworkStream;

    new(server: SocketServer, handle: ClientHandle) {
        this._server = server;
        this._handle = handle;
    }

    public accept(server: SocketServer): bool 
        |> self.socket_accept_handle(this._handle, server.server_handle) == 0;
    public getWriter(): StreamWriter {
        if (this._original == null)
            this._create_streams();
        return this._writer;
    }

    public getReader(): StreamReader {
        if (this._original == null)
            this._create_streams();
        return this._reader;
    }

    private _create_streams(): void {
        _original = new NetworkStream(this._handle);
        _writer = new StreamWriter(_original);
        _reader = new StreamReader(_original);
    }

    [native("__internal__", "socket_accept_handle")]
    private static extern socket_accept_handle(client: ClientHandle, server: SocketHandle): i32;
}

struct ClientHandle {
    client_handle: raw;
}