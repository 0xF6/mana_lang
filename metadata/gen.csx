#!/bin/dotnet run
#r "nuget: Newtonsoft.Json, 12.0.3"
using System;
using System.IO;
using System.Linq;
using Newtonsoft.Json;

const string header = "/// <auto-generated> don't touch this file, for modification use gen.csx </auto-generated>";

record OpCode(string n, byte size, int fc, int cc);

var content = File.ReadAllText("opcodes.def.json");
var ops = JsonConvert.DeserializeObject<OpCode[]>(content);

var cpp_def = new StringBuilder();
var cs_def = new StringBuilder();
var cs_def_props = new StringBuilder();

void gen_cpp_def(StringBuilder builder)
{
    foreach(var i in ops.Select((x, y) => (x.n, y)))
        builder.AppendLine($"OP_DEF({i.n.Replace(".", "_")}, 0x{i.y:X2})");
}

void gen_cs_def(StringBuilder builder)
{
    builder.AppendLine(header);
    builder.AppendLine("namespace wave \n{");
    builder.AppendLine("\tpublic enum OpCodeValue : ushort \n\t{");

    foreach(var i in ops.Select((x, y) => (x.n, y)))
        builder.AppendLine($"\t\t{i.n.Replace(".", "_")} = 0x{i.y:X2},");
        
    builder.AppendLine("\t}\n}");
}

void gen_cs_props(StringBuilder builder)
{
    int CreateFlag(byte size, int flow, int chain) 
            => (chain << 0xC) | 0x1F | (flow << 0x11) | 0x1F | (size << 22) | 0x3;
    builder.AppendLine(header);
    builder.AppendLine("namespace wave \n{");
    builder.AppendLine("\tusing global::wave.runtime.emit;");
    builder.AppendLine("\tpublic static class OpCodes \n\t{");
    foreach(var i in ops.Select((x, y) => (x.n, y, x.size, x.fc, x.cc)))
        builder.AppendLine($"\t\tpublic static OpCode {i.n.Replace(".", "_")} "+
        $"= new (0x{i.y:X2}, 0x{CreateFlag(i.size, i.fc, i.cc):X6});");
    builder.AppendLine("\t}\n}");
}



gen_cpp_def(cpp_def);
gen_cs_def(cs_def);
gen_cs_props(cs_def_props);

    

if (File.Exists("opcodes.def"))
    File.Delete("opcodes.def");
if (File.Exists("opcodes.def.cs"))
    File.Delete("opcodes.def.cs");
if (File.Exists("opcodes.list.def.cs"))
    File.Delete("opcodes.list.def.cs");



File.WriteAllText("opcodes.def", cpp_def.ToString());
File.WriteAllText("opcodes.def.cs", cs_def.ToString());
File.WriteAllText("opcodes.list.def.cs", cs_def_props.ToString());